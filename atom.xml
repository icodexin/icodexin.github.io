<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小芯的博客</title>
  
  <subtitle>一个热爱编码的计算机大学生 | codexin.cn</subtitle>
  <link href="https://codexin.cn/atom.xml" rel="self"/>
  
  <link href="https://codexin.cn/"/>
  <updated>2023-03-19T13:11:22.202Z</updated>
  <id>https://codexin.cn/</id>
  
  <author>
    <name>爱编程的小芯</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Qt 内置 Icon</title>
    <link href="https://codexin.cn/post/Qt-Built-In-Icon/"/>
    <id>https://codexin.cn/post/Qt-Built-In-Icon/</id>
    <published>2023-01-08T04:22:35.000Z</published>
    <updated>2023-03-19T13:11:22.202Z</updated>
    
    <content type="html"><![CDATA[<p>在 Qt 中，内置了许多图标，我们在设计应用程序时，可以使用这些图标。</p><span id="more"></span> <h2 id="有哪些图标"><a href="#有哪些图标" class="headerlink" title="有哪些图标"></a>有哪些图标</h2><p>使用标准图标的好处是，应用风格与当前系统相统一。</p><p>我们可以遍历这些图标，以便日后方便使用。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> layout = <span class="keyword">new</span> <span class="built_in">QGridLayout</span>();</span><br><span class="line"></span><br><span class="line">QMetaEnum sp = QMetaEnum::<span class="built_in">fromType</span>&lt;QStyle::StandardPixmap&gt;(); <span class="comment">// 将标准Pixmap枚举转换为QMetaEnum</span></span><br><span class="line"><span class="keyword">auto</span> style = QApplication::<span class="built_in">style</span>(); <span class="comment">// 获取当前App的style</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> colNum = <span class="number">4</span>;             <span class="comment">// 设置显示4列</span></span><br><span class="line"><span class="type">int</span> count = sp.<span class="built_in">keyCount</span>();  <span class="comment">// 图标总数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">    <span class="keyword">auto</span> iconName = sp.<span class="built_in">key</span>(i);                  <span class="comment">// 获取图标名称</span></span><br><span class="line">    <span class="keyword">auto</span> pixmap = (QStyle::StandardPixmap) i;   <span class="comment">// 获取对应的Pixmap</span></span><br><span class="line">    <span class="keyword">auto</span> icon = style-&gt;<span class="built_in">standardIcon</span>(pixmap);    <span class="comment">// 创建图标</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将图标添加到按钮中</span></span><br><span class="line">    <span class="keyword">auto</span> button = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(icon, QString::<span class="built_in">asprintf</span>(<span class="string">&quot;%02d - %s&quot;</span>, i, iconName));</span><br><span class="line">    button-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;QPushButton&#123;text-align : left;&#125;&quot;</span>);</span><br><span class="line">    <span class="comment">// 将按钮添加到布局中</span></span><br><span class="line">    layout-&gt;<span class="built_in">addWidget</span>(button, i / colNum, i % colNum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">setLayout</span>(layout);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;Qt 内置图标&quot;</span>);</span><br></pre></td></tr></table></figure><p>我使用的是macOS系统，Qt版本为5.15，一共有79个图标，效果如下：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://blog-1302549712.cos.ap-nanjing.myqcloud.com/image/post/2023-01-08-Qt-Built-In-Icon/Qt_Built_In_Icon.png" fancybox="true"/><a class="image-download blur" style="opacity:0" href="https://blog-1302549712.cos.ap-nanjing.myqcloud.com/image/post/2023-01-08-Qt-Built-In-Icon/Qt_Built_In_Icon.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div></div><p>在高分辨率屏幕上，图标可能显示模糊，此时可以加上这句代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QApplication::<span class="built_in">setAttribute</span>(Qt::AA_UseHighDpiPixmaps);</span><br></pre></td></tr></table></figure><h2 id="如何使用内置图标"><a href="#如何使用内置图标" class="headerlink" title="如何使用内置图标"></a>如何使用内置图标</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取app的qstyle指针</span></span><br><span class="line">QStyle *qstyle = QApplication::<span class="built_in">style</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按名字取图标</span></span><br><span class="line">QStyle::StandardPixmap qtIcon = QStyle::SP_TitleBarMenuButton;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按索引号取图标</span></span><br><span class="line"><span class="comment">// QStyle::StandardPixmap qtIcon = (QStyle::StandardPixmap) 0;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个图标</span></span><br><span class="line">QIcon icon = qstyle-&gt;<span class="built_in">standardIcon</span>(qtIcon);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把图标放到按钮上</span></span><br><span class="line">QPushButton *iconBtn = <span class="keyword">new</span> QPushButton;</span><br><span class="line">iconBtn-&gt;<span class="built_in">setIcon</span>(icon);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建像素图</span></span><br><span class="line">QPixmap pix = qstyle-&gt;<span class="built_in">standardPixmap</span>(qtIcon);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把像素图放到Label上</span></span><br><span class="line">QLabel *iconLable = <span class="keyword">new</span> QLabel;</span><br><span class="line">iconLable-&gt;<span class="built_in">setPixmap</span>(pix);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 Qt 中，内置了许多图标，我们在设计应用程序时，可以使用这些图标。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://codexin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="C++" scheme="https://codexin.cn/tags/C/"/>
    
    <category term="Qt" scheme="https://codexin.cn/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>Conda 常用命令</title>
    <link href="https://codexin.cn/post/conda-command/"/>
    <id>https://codexin.cn/post/conda-command/</id>
    <published>2023-01-03T04:27:31.000Z</published>
    <updated>2023-03-19T13:11:22.202Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些常用的 conda 命令。</p><span id="more"></span><h2 id="设置镜像源"><a href="#设置镜像源" class="headerlink" title="设置镜像源"></a>设置镜像源</h2><figure class="highlight yml"><figcaption><span>~/.condarc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">defaults</span></span><br><span class="line"><span class="attr">show_channel_urls:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">default_channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span></span><br><span class="line"><span class="attr">custom_channels:</span></span><br><span class="line">  <span class="attr">conda-forge:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">msys2:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">bioconda:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">menpo:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">pytorch:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">pytorch-lts:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">simpleitk:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br></pre></td></tr></table></figure><p>然后清除索引缓存，保证用的是镜像站提供的索引：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_5" value="conda clean -i"><button class="copy-btn" onclick="util.copy(&quot;copy_5&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>创建名为 <code>env_name</code> 新环境，并指定 Python 版本: </p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_6" value="conda create -n env_name python=x.x"><button class="copy-btn" onclick="util.copy(&quot;copy_6&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>激活名为 <code>env_name</code> 的环境：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_7" value="conda activate env_name"><button class="copy-btn" onclick="util.copy(&quot;copy_7&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>列出所有环境：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_8" value="conda env list"><button class="copy-btn" onclick="util.copy(&quot;copy_8&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>退出当前环境：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_9" value="conda deactivate"><button class="copy-btn" onclick="util.copy(&quot;copy_9&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>删除名为 <code>env_name</code> 的环境</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_10" value="conda remove -n env_name --all"><button class="copy-btn" onclick="util.copy(&quot;copy_10&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>取消启动终端后默认打开base环境：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_11" value="conda config --set auto_activate_base false"><button class="copy-btn" onclick="util.copy(&quot;copy_11&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录一些常用的 conda 命令。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://codexin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://codexin.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>在 Hexo 中渲染 LaTeX 公式</title>
    <link href="https://codexin.cn/post/hexo-latex-render/"/>
    <id>https://codexin.cn/post/hexo-latex-render/</id>
    <published>2022-01-24T07:02:14.000Z</published>
    <updated>2023-03-19T13:11:22.202Z</updated>
    
    <content type="html"><![CDATA[<p>一直用LaTeX写公式很久了，但发现在Hexo中渲染存在问题。推荐使用Mathjax插件解决。</p><span id="more"></span><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>这个方案可以解决LaTeX特殊字符（如<code>*</code>，<code>{</code>，<code>}</code>，<code>\\</code>）和Markdown语法的冲突。<br>但是我在用的时候，发现它和表格之间存在冲突。就是在有序列表中使用表格时，不能正确渲染表格。</p><h3 id="更改渲染引擎"><a href="#更改渲染引擎" class="headerlink" title="更改渲染引擎"></a>更改渲染引擎</h3><p>将<code>hexo-renderer-marked</code>更改为<code>hexo-renderer-kramed</code></p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly="" id="copy_1" value="npm uninstall hexo-renderer-marked --save"><button class="copy-btn" onclick="util.copy(&quot;copy_1&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy" width="max"><input class="copy-area" readonly="" id="copy_2" value="npm install hexo-renderer-kramed --save --save"><button class="copy-btn" onclick="util.copy(&quot;copy_2&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h3 id="安装Mathjax插件"><a href="#安装Mathjax插件" class="headerlink" title="安装Mathjax插件"></a>安装Mathjax插件</h3><div class="tag-plugin copy" width="max"><input class="copy-area" readonly="" id="copy_3" value="npm install hexo-renderer-mathjax --save"><button class="copy-btn" onclick="util.copy(&quot;copy_3&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h3 id="解决语义冲突"><a href="#解决语义冲突" class="headerlink" title="解决语义冲突"></a>解决语义冲突</h3><p>更改<code>node_modules/kramed/lib/rules/inline.js</code>的第11行，取消对<code>\</code>,<code>{</code>,<code>}</code>的转义</p><figure class="highlight js"><figcaption><span>blog/node_modules/kramed/lib/rules/inline.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  escape: /^\\([\\`*{}\[\]()#$+\-.!_&gt;])/,</span></span><br><span class="line">  <span class="attr">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span></span><br></pre></td></tr></table></figure><p>第20行的<code>em</code>变量也要做相应的修改</p><figure class="highlight js"><figcaption><span>blog/node_modules/kramed/lib/rules/inline.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span><br><span class="line">  <span class="attr">em</span>: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span></span><br></pre></td></tr></table></figure><h3 id="开启Mathjax"><a href="#开启Mathjax" class="headerlink" title="开启Mathjax"></a>开启Mathjax</h3><p>在博客根目录的<code>_config.yml</code>添加如下配置：</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MathJax Support</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在需要的文章的<code>Front-matter</code>区打开mathjax开关：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>上面方案会造成有序列表中表格解析异常，后来我经过搜索，发现hexo-filter-mathjax这个插件可以解决。</p><p>但是，这个方案不能解决语义冲突的问题，所以这个时候要对LaTeX公式进行转义。</p><p>比如对于公式：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.17ex;" xmlns="http://www.w3.org/2000/svg" width="21.011ex" height="5.47ex" role="img" focusable="false" viewBox="0 -1459 9287 2418"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z"></path></g><g data-mml-node="mtable" transform="translate(750,0)"><g data-mml-node="mtr" transform="translate(0,700)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(762.8,0)"><path data-c="2190" d="M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z"></path></g><g data-mml-node="msup" transform="translate(2040.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3080.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4136.6,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(4739.6,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(5446.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(6447,0)"><path data-c="1D702" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q156 442 175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336V326Q503 302 439 53Q381 -182 377 -189Q364 -216 332 -216Q319 -216 310 -208T299 -186Q299 -177 358 57L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6944,0)"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(7777,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-709)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(993.8,0)"><path data-c="2190" d="M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z"></path></g><g data-mml-node="msup" transform="translate(2271.6,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3542.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4598.6,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(5536.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(6537,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(9287,0) translate(0 250)"></g></g></g></g></svg></mjx-container><br>其正常的写法是：</p><figure class="highlight tex"><figcaption><span>正常写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\left</span><span class="keyword">\{</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{l}</span><br><span class="line">v<span class="keyword">\gets</span> v<span class="built_in">^</span><span class="keyword">\prime</span> = <span class="keyword">\mu</span> v-<span class="keyword">\eta</span> <span class="keyword">\nabla</span> C<span class="keyword">\\</span></span><br><span class="line">w<span class="keyword">\gets</span> w<span class="built_in">^</span><span class="keyword">\prime</span> = w + v<span class="built_in">^</span><span class="keyword">\prime</span></span><br><span class="line"><span class="keyword">\end</span>{array} </span><br><span class="line"><span class="keyword">\right</span>.</span><br></pre></td></tr></table></figure><p>使用<code>hexo-filter-mathjax</code>需要对<code>\</code>进行转义：</p><figure class="highlight tex"><figcaption><span>转义后的写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\left</span><span class="keyword">\\</span>{</span><br><span class="line"><span class="keyword">\begin</span>{array}{l}</span><br><span class="line">v<span class="keyword">\gets</span> v<span class="built_in">^</span><span class="keyword">\prime</span> = <span class="keyword">\mu</span> v-<span class="keyword">\eta</span> <span class="keyword">\nabla</span> C<span class="keyword">\\</span><span class="keyword">\\</span></span><br><span class="line">w<span class="keyword">\gets</span> w<span class="built_in">^</span><span class="keyword">\prime</span> = w + v<span class="built_in">^</span><span class="keyword">\prime</span></span><br><span class="line"><span class="keyword">\end</span>{array} </span><br><span class="line"><span class="keyword">\right</span>.</span><br></pre></td></tr></table></figure><p>推荐一个在线工具，输入LaTeX公式后可以进行转义。</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="在线LaTeX公式编辑器" href="https://latexlive.com" target="_blank" rel="external nofollow noopener noreferrer" cardlink="" autofill="icon"><div class="left"><span class="title">在线LaTeX公式编辑器</span><span class="cap link fs12">https://latexlive.com</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><h3 id="安装MathJax插件"><a href="#安装MathJax插件" class="headerlink" title="安装MathJax插件"></a>安装MathJax插件</h3><div class="tag-plugin copy" width="max"><input class="copy-area" readonly="" id="copy_4" value="npm install hexo-filter-mathjax"><button class="copy-btn" onclick="util.copy(&quot;copy_4&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>注意这个方案不需要更换渲染引擎。</p><h3 id="开启MathJax"><a href="#开启MathJax" class="headerlink" title="开启MathJax"></a>开启MathJax</h3><p>在博客根目录的<code>_config.yml</code>添加如下配置：</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">none</span> <span class="comment"># 或 'ams' 或 'all'</span></span><br><span class="line">  <span class="attr">single_dollars:</span> <span class="literal">true</span> <span class="comment"># 启用单个美元符号作为内联（行内）数学公式定界符</span></span><br><span class="line">  <span class="attr">cjk_width:</span> <span class="number">0.9</span> <span class="comment"># 相对 CJK 字符宽度</span></span><br><span class="line">  <span class="attr">normal_width:</span> <span class="number">0.6</span> <span class="comment"># 相对正常（等宽）宽度</span></span><br><span class="line">  <span class="attr">append_css:</span> <span class="literal">true</span> <span class="comment"># 将 CSS 添加到每个页面</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">false</span> <span class="comment"># 如果为 true，那么无论每篇文章的前题中的 `mathjax` 设置如何，每页都将由 mathjax 呈现</span></span><br></pre></td></tr></table></figure><p>在需要的文章的Front-matter里打开mathjax开关：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;一直用LaTeX写公式很久了，但发现在Hexo中渲染存在问题。推荐使用Mathjax插件解决。&lt;/p&gt;</summary>
    
    
    
    <category term="解决方案" scheme="https://codexin.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="hexo" scheme="https://codexin.cn/tags/hexo/"/>
    
    <category term="LaTeX" scheme="https://codexin.cn/tags/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title>《数据库原理及应用》课程设计</title>
    <link href="https://codexin.cn/post/course-design-of-database/"/>
    <id>https://codexin.cn/post/course-design-of-database/</id>
    <published>2020-12-06T06:31:09.000Z</published>
    <updated>2023-03-19T13:11:22.202Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>现要求开发电脑仓库管理系统。电脑仓库管理系统主要针对电脑的库存信息管理，对于仓库日常发生的业务，分为两大类，即入库和出库。经过数据库的设计后，用户通过相应的模块，对仓库进行简单的基本操作，即可轻松管理仓库。<br>经过可行性分析和初步的需求调查，确定了系统的功能边界，该系统应能完成下面的功能：</p><ol><li>信息登记：在数据库中添加相关电脑、供货商、仓库的信息；</li><li>入库：增加电脑库存并生成入库记录；</li><li>出库：减少电脑库存并生成出库记录。</li></ol><span id="more"></span><h2 id="功能设计"><a href="#功能设计" class="headerlink" title="功能设计"></a>功能设计</h2><h3 id="顶层设计"><a href="#顶层设计" class="headerlink" title="顶层设计"></a>顶层设计</h3><p><img src="https://img-blog.csdnimg.cn/20201208174320996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h3 id="第0层设计"><a href="#第0层设计" class="headerlink" title="第0层设计"></a>第0层设计</h3><p><img src="https://img-blog.csdnimg.cn/20201208174431387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h3 id="入库设计"><a href="#入库设计" class="headerlink" title="入库设计"></a>入库设计</h3><ul><li>输入：待入库的电脑名称（型号）、存储该类电脑仓库名称、入库电脑数量</li><li>输出：入库记录</li><li>操作逻辑：<ol><li>   根据输入信息，检查电脑型号、仓库名称是否存在，若只要有一个不存在，拒绝入库请求；</li><li>   查询库存表中是否有记录，如果没有记录，那么认定为新库存信息，向库存中添加这一信息即可；如果有记录，那么将该记录的电脑数量数据项修改为入库后的数量即可。</li></ol></li></ul><p><img src="https://img-blog.csdnimg.cn/20201208174516238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h3 id="出库设计"><a href="#出库设计" class="headerlink" title="出库设计"></a>出库设计</h3><ul><li>输入：待出库的电脑名称（型号）、存储该类电脑仓库名称、出库电脑数量</li><li>输出：出库记录</li><li>操作逻辑：<ol><li>   根据输入信息，检查电脑型号、仓库名称是否存在，若只要有一个不存在，拒绝出库请求；</li><li>   查询库存表中是否有记录，如果没有记录，那么表示该仓库中没有存储这类电脑，拒绝出库请求；如果有记录，检测出库电脑数量是否大于库存数量，如果大于，表示库存不足，拒绝出库请求；如果有记录并且库存充足，那么将该记录的电脑数量数据项修改为出库后的数量即可。</li></ol></li></ul><p><img src="https://img-blog.csdnimg.cn/20201208174532483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h2 id="关系模型"><a href="#关系模型" class="headerlink" title="关系模型"></a>关系模型</h2><h3 id="E-R图"><a href="#E-R图" class="headerlink" title="E-R图"></a>E-R图</h3><p><img src="https://img-blog.csdnimg.cn/20201208174713372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h3 id="关系模型设计"><a href="#关系模型设计" class="headerlink" title="关系模型设计"></a>关系模型设计</h3><table><thead><tr><th align="left">关系名</th><th align="left">属性及码</th><th align="left">其他约束条件</th></tr></thead><tbody><tr><td align="left">供应商</td><td align="left">供应商编号，供应商名称，供应商地址，供应商电话</td><td align="left">1、 供应商名称不允许为空；2、 供应商电话不允许为空</td></tr><tr><td align="left">电脑</td><td align="left">电脑编号，电脑名称，电脑品牌，电脑单价，供货商编号</td><td align="left">1、 电脑名称不允许为空；2、 电脑单价不允许为空；3、 供货商编号引用供货商中的供应商编号</td></tr><tr><td align="left">仓库</td><td align="left">仓库编号，仓库名称，仓库地址，仓库电话</td><td align="left">1、 仓库名称不允许为空；2、 仓库电话不允许为空</td></tr><tr><td align="left">库存</td><td align="left">库存记录编号，电脑编号，仓库编号，电脑数量</td><td align="left">1、 电脑编号引用电脑关系中的电脑编号；2、 仓库编号引用仓库关系中的仓库编号</td></tr><tr><td align="left">入库记录</td><td align="left">入库记录编号，请求入库电脑名称，仓库名称，入库数量，入库总金额，操作日期时间，是否为新型号电脑，成功入库否</td><td align="left">1、 操作日期时间不允许为空；2、 入库否不允许为空</td></tr><tr><td align="left">出库记录</td><td align="left">出库记录编号，请求出库电脑名称，仓库名称，出库数量，操作日期时间，是否全部出库，成功出库否</td><td align="left">1、 操作日期时间不允许为空；2、 成功出库否不允许为空</td></tr></tbody></table><h3 id="数据库表设计"><a href="#数据库表设计" class="headerlink" title="数据库表设计"></a>数据库表设计</h3><h4 id="Supplier（供应商表）"><a href="#Supplier（供应商表）" class="headerlink" title="Supplier（供应商表）"></a>Supplier（供应商表）</h4><table><thead><tr><th>字段名</th><th>字段含义</th><th>字段类型</th><th>是否为空</th><th>列级约束</th></tr></thead><tbody><tr><td>Supplier_ID</td><td>供应商编号</td><td>varchar(7)</td><td>not null</td><td>primary key</td></tr><tr><td>Supplier_Name</td><td>供应商名称</td><td>varchar(30)</td><td>not null</td><td>unique</td></tr><tr><td>Supplier_Address</td><td>供应商地址</td><td>varchar(50)</td><td></td><td></td></tr><tr><td>Supplier_Tel</td><td>供应商电话</td><td>Varchar(11)</td><td>not null</td><td></td></tr></tbody></table><h4 id="Computer（电脑表）"><a href="#Computer（电脑表）" class="headerlink" title="Computer（电脑表）"></a>Computer（电脑表）</h4><table><thead><tr><th>字段名</th><th>字段含义</th><th>字段类型</th><th>是否为空</th><th>列级约束</th></tr></thead><tbody><tr><td>Computer_ID</td><td>电脑编号</td><td>varchar(6)</td><td>not null</td><td>primary key</td></tr><tr><td>Computer_Name</td><td>电脑名称</td><td>varchar(30)</td><td>not null</td><td>unique</td></tr><tr><td>Computer_Brand</td><td>电脑品牌</td><td>varchar(10)</td><td></td><td></td></tr><tr><td>Computer_Unit_Price</td><td>电脑单价</td><td>float</td><td>not null</td><td></td></tr><tr><td>Supplier_ID</td><td>供货商编号</td><td>varchar(7)</td><td>not null</td><td>foreign key references Supplier (Supplier_ID)</td></tr></tbody></table><h4 id="Warehouse（仓库表）"><a href="#Warehouse（仓库表）" class="headerlink" title="Warehouse（仓库表）"></a>Warehouse（仓库表）</h4><table><thead><tr><th>字段名</th><th>字段含义</th><th>字段类型</th><th>是否为空</th><th>列级约束</th></tr></thead><tbody><tr><td>Warehouse_ID</td><td>仓库编号</td><td>varchar(6)</td><td>not null</td><td>primary key</td></tr><tr><td>Warehouse_Name</td><td>仓库名称</td><td>varchar(30)</td><td>not null</td><td>unique</td></tr><tr><td>Warehouse_Address</td><td>仓库地址</td><td>varchar(50)</td><td></td><td></td></tr><tr><td>Warehouse_Tel</td><td>仓库电话</td><td>varchar(11)</td><td>not null</td><td></td></tr></tbody></table><h4 id="Stock（库存表）"><a href="#Stock（库存表）" class="headerlink" title="Stock（库存表）"></a>Stock（库存表）</h4><table><thead><tr><th>字段名</th><th>字段含义</th><th>字段类型</th><th>是否为空</th><th>列级约束</th></tr></thead><tbody><tr><td>Stock_ID</td><td>库存记录编号</td><td>varchar(6)</td><td>not null</td><td></td></tr><tr><td>Computer_ID</td><td>电脑编号</td><td>varchar(6)</td><td>not null</td><td>foreign key references Computer(Computer_ID)</td></tr><tr><td>Warehouse_ID</td><td>仓库编号</td><td>varchar(6)</td><td>not null</td><td>foreign key references Warehouse(Warehouse_ID)</td></tr><tr><td>Number</td><td>电脑总数</td><td>int</td><td>not null</td><td></td></tr></tbody></table><p>表级约束：primary key (Stock_ID, Computer_ID, Warehouse_ID)</p><h4 id="InputRecords（入库记录表）"><a href="#InputRecords（入库记录表）" class="headerlink" title="InputRecords（入库记录表）"></a>InputRecords（入库记录表）</h4><table><thead><tr><th>字段名</th><th>字段含义</th><th>字段类型</th><th>是否为空</th><th>列级约束</th></tr></thead><tbody><tr><td>InputRecords_ID</td><td>入库记录编号</td><td>varchar(8)</td><td>not null</td><td>primary key</td></tr><tr><td>Computer_Name</td><td>请求入库电脑名称</td><td>varchar(30)</td><td>not null</td><td></td></tr><tr><td>Warehouse_Name</td><td>仓库名称</td><td>varchar(30)</td><td>not null</td><td></td></tr><tr><td>Input_Number</td><td>入库数量</td><td>int</td><td></td><td></td></tr><tr><td>Total_Money</td><td>入库总金额</td><td>float</td><td></td><td></td></tr><tr><td>Input_DateTime</td><td>操作日期时间</td><td>datetime</td><td>not null</td><td></td></tr><tr><td>isNewTypeComputer</td><td>是否为新型号电脑</td><td>bool</td><td></td><td></td></tr><tr><td>isSuccess</td><td>成功入库否</td><td>bool</td><td>not null</td><td></td></tr></tbody></table><h4 id="OutputRecords（出库记录表）"><a href="#OutputRecords（出库记录表）" class="headerlink" title="OutputRecords（出库记录表）"></a>OutputRecords（出库记录表）</h4><table><thead><tr><th>字段名</th><th>字段含义</th><th>字段类型</th><th>是否为空</th><th>列级约束</th></tr></thead><tbody><tr><td>OutputRecords_ID</td><td>出库记录编号</td><td>varchar(8)</td><td>not null</td><td>primary key</td></tr><tr><td>Computer_Name</td><td>请求出库电脑名称</td><td>varchar(30)</td><td>not null</td><td></td></tr><tr><td>Warehouse_Name</td><td>仓库名称</td><td>varchar(30)</td><td>not null</td><td></td></tr><tr><td>Output_Number</td><td>出库数量</td><td>int</td><td></td><td></td></tr><tr><td>Output_DateTime</td><td>操作日期时间</td><td>datetime</td><td>not null</td><td></td></tr><tr><td>isAllOutput</td><td>是否全部出库完</td><td>bool</td><td></td><td></td></tr><tr><td>isSuccess</td><td>成功出库否</td><td>bool</td><td>not null</td><td></td></tr></tbody></table><h2 id="MySQL数据库代码实践"><a href="#MySQL数据库代码实践" class="headerlink" title="MySQL数据库代码实践"></a>MySQL数据库代码实践</h2><h3 id="建库、建表"><a href="#建库、建表" class="headerlink" title="建库、建表"></a>建库、建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数据库：WarehouseDB</span></span><br><span class="line"><span class="keyword">create</span> database WarehouseDB;</span><br><span class="line">use WarehouseDB;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 表：供应商</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Supplier</span><br><span class="line">(</span><br><span class="line">    Supplier_ID      <span class="type">varchar</span>(<span class="number">7</span>) <span class="keyword">primary</span> key,      <span class="comment">-- 供应商编号</span></span><br><span class="line">    Supplier_Name    <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 供应商名称</span></span><br><span class="line">    Supplier_Address <span class="type">varchar</span>(<span class="number">50</span>),                 <span class="comment">-- 供应商地址</span></span><br><span class="line">    Supplier_Tel     <span class="type">varchar</span>(<span class="number">11</span>)        <span class="keyword">not</span> <span class="keyword">null</span>  <span class="comment">-- 供应商电话</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 表：电脑</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Computer</span><br><span class="line">(</span><br><span class="line">    Computer_ID         <span class="type">varchar</span>(<span class="number">6</span>) <span class="keyword">primary</span> key,      <span class="comment">-- 电脑编号</span></span><br><span class="line">    Computer_Name       <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 电脑名称</span></span><br><span class="line">    Computer_Brand      <span class="type">varchar</span>(<span class="number">10</span>),                 <span class="comment">-- 电脑品牌</span></span><br><span class="line">    Computer_Unit_Price <span class="type">float</span>              <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 电脑单价</span></span><br><span class="line">    Supplier_ID         <span class="type">varchar</span>(<span class="number">7</span>)         <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 供货商编号</span></span><br><span class="line">    <span class="comment">-- 外码：Computer.Supplier_ID 参考自 Supplier.Supplier_ID</span></span><br><span class="line">    <span class="keyword">foreign</span> key (Supplier_ID) <span class="keyword">references</span> Supplier (Supplier_ID)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 表：仓库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Warehouse</span><br><span class="line">(</span><br><span class="line">    Warehouse_ID      <span class="type">varchar</span>(<span class="number">6</span>) <span class="keyword">primary</span> key,      <span class="comment">-- 仓库编号</span></span><br><span class="line">    Warehouse_Name    <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 仓库名称</span></span><br><span class="line">    Warehouse_Address <span class="type">varchar</span>(<span class="number">50</span>),                 <span class="comment">-- 仓库地址</span></span><br><span class="line">    Warehouse_Tel     <span class="type">varchar</span>(<span class="number">11</span>)        <span class="keyword">not</span> <span class="keyword">null</span>  <span class="comment">-- 仓库电话</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 表：库存</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Stock</span><br><span class="line">(</span><br><span class="line">    Stock_ID     <span class="type">varchar</span>(<span class="number">6</span>),   <span class="comment">-- 库存记录编号</span></span><br><span class="line">    Computer_ID  <span class="type">varchar</span>(<span class="number">6</span>),   <span class="comment">-- 电脑编号</span></span><br><span class="line">    Warehouse_ID <span class="type">varchar</span>(<span class="number">6</span>),   <span class="comment">-- 仓库编号</span></span><br><span class="line">    Number       <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 电脑总数</span></span><br><span class="line">    <span class="comment">-- 主码构成：Stock_ID, Computer_ID, Warehouse_ID</span></span><br><span class="line">    <span class="keyword">primary</span> key (Stock_ID, Computer_ID, Warehouse_ID),</span><br><span class="line">    <span class="comment">-- 外码：Stock.Computer_ID 参考自 Computer.Computer_ID</span></span><br><span class="line">    <span class="keyword">foreign</span> key (Computer_ID) <span class="keyword">references</span> Computer (Computer_ID),</span><br><span class="line">    <span class="comment">-- 外码：Stock.Warehouse_ID 参考自 Warehouse.Warehouse_ID</span></span><br><span class="line">    <span class="keyword">foreign</span> key (Warehouse_ID) <span class="keyword">references</span> Warehouse (Warehouse_ID)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 表：入库记录</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> InputRecords</span><br><span class="line">(</span><br><span class="line">    InputRecords_ID   <span class="type">varchar</span>(<span class="number">8</span>) <span class="keyword">primary</span> key, <span class="comment">-- 入库记录编号</span></span><br><span class="line">    Computer_Name     <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,   <span class="comment">-- 请求入库电脑名称</span></span><br><span class="line">    Warehouse_Name    <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,   <span class="comment">-- 仓库名称</span></span><br><span class="line">    Input_Number      <span class="type">int</span>,                    <span class="comment">-- 入库数量</span></span><br><span class="line">    Total_Money       <span class="type">float</span>,                  <span class="comment">-- 入库总金额</span></span><br><span class="line">    Input_DateTime    datetime    <span class="keyword">not</span> <span class="keyword">null</span>,   <span class="comment">-- 操作日期时间</span></span><br><span class="line">    isNewTypeComputer bool,                   <span class="comment">-- 是否为新型号电脑</span></span><br><span class="line">    isSuccess         bool        <span class="keyword">not</span> <span class="keyword">null</span>    <span class="comment">-- 成功入库否</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 表：出库记录</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">Table</span> OutputRecords</span><br><span class="line">(</span><br><span class="line">    OutputRecords_ID <span class="type">varchar</span>(<span class="number">8</span>) <span class="keyword">primary</span> key, <span class="comment">-- 出库记录编号</span></span><br><span class="line">    Computer_Name    <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,   <span class="comment">-- 请求出库电脑名称</span></span><br><span class="line">    Warehouse_Name   <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,   <span class="comment">-- 仓库名称</span></span><br><span class="line">    Output_Number    <span class="type">int</span>,                    <span class="comment">-- 出库数量</span></span><br><span class="line">    Output_DateTime  datetime    <span class="keyword">not</span> <span class="keyword">null</span>,   <span class="comment">-- 出库日期时间</span></span><br><span class="line">    isAllOutput      bool,                   <span class="comment">-- 是否全部出库完</span></span><br><span class="line">    isSuccess        bool        <span class="keyword">not</span> <span class="keyword">null</span>    <span class="comment">-- 成功出库否</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="编写存储过程"><a href="#编写存储过程" class="headerlink" title="编写存储过程"></a>编写存储过程</h3><h4 id="添加供货商"><a href="#添加供货商" class="headerlink" title="添加供货商"></a>添加供货商</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加供货商</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> AddSupplier(<span class="keyword">in</span> Name <span class="type">varchar</span>(<span class="number">30</span>), <span class="keyword">in</span> Address <span class="type">varchar</span>(<span class="number">50</span>), <span class="keyword">in</span> Tel <span class="type">varchar</span>(<span class="number">11</span>))</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> ID <span class="type">int</span>(<span class="number">5</span>) zerofill;</span><br><span class="line">    <span class="comment">-- 生成ID号</span></span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">max</span>(<span class="built_in">cast</span>(substr(Supplier_ID, <span class="number">3</span>) <span class="keyword">as</span> signed <span class="type">integer</span>))</span><br><span class="line">    <span class="keyword">into</span> ID</span><br><span class="line">    <span class="keyword">from</span> Supplier;</span><br><span class="line">    if ID <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">set</span> ID <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">set</span> ID <span class="operator">=</span> ID <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line">    <span class="comment">-- 插入到Supplier表中</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> Supplier</span><br><span class="line">        <span class="keyword">value</span> (concat(<span class="string">&#x27;Su&#x27;</span>, ID), Name, Address, Tel);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="添加仓库"><a href="#添加仓库" class="headerlink" title="添加仓库"></a>添加仓库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加仓库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> AddWarehouse(<span class="keyword">in</span> Name <span class="type">varchar</span>(<span class="number">30</span>), <span class="keyword">in</span> Address <span class="type">varchar</span>(<span class="number">50</span>), <span class="keyword">in</span> Tel <span class="type">varchar</span>(<span class="number">11</span>))</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> ID <span class="type">int</span>(<span class="number">5</span>) zerofill;</span><br><span class="line">    <span class="comment">-- 生成ID号</span></span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">max</span>(<span class="built_in">cast</span>(substr(Warehouse_ID, <span class="number">2</span>) <span class="keyword">as</span> signed <span class="type">integer</span>))</span><br><span class="line">    <span class="keyword">into</span> ID</span><br><span class="line">    <span class="keyword">from</span> Warehouse;</span><br><span class="line">    if ID <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">set</span> ID <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">set</span> ID <span class="operator">=</span> ID <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line">    <span class="comment">-- 插入到Supplier表中</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> Warehouse</span><br><span class="line">        <span class="keyword">value</span> (concat(<span class="string">&#x27;W&#x27;</span>, ID), Name, Address, Tel);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="添加电脑"><a href="#添加电脑" class="headerlink" title="添加电脑"></a>添加电脑</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加电脑</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> AddComputer(<span class="keyword">in</span> Name <span class="type">varchar</span>(<span class="number">30</span>), <span class="keyword">in</span> Brand <span class="type">varchar</span>(<span class="number">10</span>), <span class="keyword">in</span> Price <span class="type">float</span>, <span class="keyword">in</span> SupplierName <span class="type">varchar</span>(<span class="number">30</span>))</span><br><span class="line">AddProcedure:</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="comment">-- 供货商ID</span></span><br><span class="line">    <span class="keyword">declare</span> SupplierID <span class="type">varchar</span>(<span class="number">7</span>);</span><br><span class="line">    <span class="comment">-- 要生成的电脑ID</span></span><br><span class="line">    <span class="keyword">declare</span> ID <span class="type">int</span>(<span class="number">5</span>) zerofill;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 查询对应供货商编号</span></span><br><span class="line">    <span class="keyword">select</span> Supplier_ID</span><br><span class="line">    <span class="keyword">into</span> SupplierID</span><br><span class="line">    <span class="keyword">from</span> Supplier</span><br><span class="line">    <span class="keyword">where</span> Supplier_Name <span class="operator">=</span> SupplierName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 检查供货商是否存在</span></span><br><span class="line">    if SupplierID <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">rollback</span>; <span class="comment">-- 回滚事务</span></span><br><span class="line">        leave AddProcedure;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 生成电脑ID</span></span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">max</span>(<span class="built_in">cast</span>(substr(Computer_ID, <span class="number">2</span>) <span class="keyword">as</span> signed <span class="type">integer</span>))</span><br><span class="line">    <span class="keyword">into</span> ID</span><br><span class="line">    <span class="keyword">from</span> Computer;</span><br><span class="line">    if ID <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">set</span> ID <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">set</span> ID <span class="operator">=</span> ID <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 插入到Computer表中</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> Computer</span><br><span class="line">        <span class="keyword">value</span> (concat(<span class="string">&#x27;C&#x27;</span>, ID), Name, Brand, Price, SupplierID);</span><br><span class="line"><span class="keyword">end</span> AddProcedure;</span><br></pre></td></tr></table></figure><h4 id="入库"><a href="#入库" class="headerlink" title="入库"></a>入库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 入库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> Push(<span class="keyword">in</span> ComputerName <span class="type">varchar</span>(<span class="number">30</span>), <span class="keyword">in</span> WarehouseName <span class="type">varchar</span>(<span class="number">30</span>), <span class="keyword">in</span> PushNumber <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="comment">-- 库存中电脑编号</span></span><br><span class="line">    <span class="keyword">declare</span> ComputerID <span class="type">varchar</span>(<span class="number">6</span>);</span><br><span class="line">    <span class="comment">-- 库存中仓库编号</span></span><br><span class="line">    <span class="keyword">declare</span> WarehouseID <span class="type">varchar</span>(<span class="number">6</span>);</span><br><span class="line">    <span class="comment">-- 要生成的记录ID</span></span><br><span class="line">    <span class="keyword">declare</span> RecordsID <span class="type">int</span>(<span class="number">7</span>) zerofill;</span><br><span class="line">    <span class="comment">-- 当前库存数量</span></span><br><span class="line">    <span class="keyword">declare</span> CurrentNumber <span class="type">int</span>;</span><br><span class="line">    <span class="comment">-- 电脑单价</span></span><br><span class="line">    <span class="keyword">declare</span> UnitPrice <span class="type">float</span>;</span><br><span class="line">    <span class="comment">-- 入库总金额</span></span><br><span class="line">    <span class="keyword">declare</span> TotalMoney <span class="type">float</span>;</span><br><span class="line"></span><br><span class="line">    PUSH:</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="comment">-- 检查参数</span></span><br><span class="line">        CheckOut:</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            <span class="comment">-- 查询对应电脑编号</span></span><br><span class="line">            <span class="keyword">select</span> Computer_ID</span><br><span class="line">            <span class="keyword">into</span> ComputerID</span><br><span class="line">            <span class="keyword">from</span> Computer</span><br><span class="line">            <span class="keyword">where</span> Computer_Name <span class="operator">=</span> ComputerName</span><br><span class="line">            limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">-- 查询对应仓库编号</span></span><br><span class="line">            <span class="keyword">select</span> Warehouse_ID</span><br><span class="line">            <span class="keyword">into</span> WarehouseID</span><br><span class="line">            <span class="keyword">from</span> Warehouse</span><br><span class="line">            <span class="keyword">where</span> Warehouse_Name <span class="operator">=</span> WarehouseName</span><br><span class="line">            limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">-- 检查电脑ID是否已存在</span></span><br><span class="line">            if ComputerID <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">set</span> <span class="variable">@isSuccess</span> <span class="operator">=</span> <span class="literal">false</span>; <span class="comment">-- 标识请求未成功</span></span><br><span class="line">                leave PUSH;</span><br><span class="line">            <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">            <span class="comment">-- 检查仓库id是否已存在</span></span><br><span class="line">            if WarehouseID <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">set</span> <span class="variable">@isSuccess</span> <span class="operator">=</span> <span class="literal">false</span>; <span class="comment">-- 标识请求未成功</span></span><br><span class="line">                leave PUSH;</span><br><span class="line">            <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">            <span class="comment">-- 查询当前库存数量</span></span><br><span class="line">            <span class="keyword">select</span> Number</span><br><span class="line">            <span class="keyword">INTO</span> CurrentNumber</span><br><span class="line">            <span class="keyword">from</span> Stock</span><br><span class="line">            <span class="keyword">where</span> Stock.Computer_ID <span class="operator">=</span> ComputerID</span><br><span class="line">              <span class="keyword">and</span> Stock.Warehouse_ID <span class="operator">=</span> WarehouseID;</span><br><span class="line"></span><br><span class="line">            <span class="comment">-- 查询电脑单价</span></span><br><span class="line">            <span class="keyword">select</span> Computer_Unit_Price</span><br><span class="line">            <span class="keyword">into</span> UnitPrice</span><br><span class="line">            <span class="keyword">from</span> Computer</span><br><span class="line">            <span class="keyword">where</span> Computer_Name <span class="operator">=</span> ComputerName;</span><br><span class="line"></span><br><span class="line">            <span class="comment">-- 计算入库总金额</span></span><br><span class="line">            <span class="keyword">set</span> TotalMoney <span class="operator">=</span> UnitPrice <span class="operator">*</span> PushNumber;</span><br><span class="line">        <span class="keyword">end</span> CheckOut;</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 入库</span></span><br><span class="line">        PushProcedure:</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">set</span> <span class="variable">@isSuccess</span> <span class="operator">=</span> <span class="literal">true</span>; <span class="comment">-- 标记请求成功</span></span><br><span class="line">            if CurrentNumber <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">                <span class="comment">-- 新电脑入库</span></span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    <span class="comment">-- 要生成的库存号</span></span><br><span class="line">                    <span class="keyword">declare</span> StockID <span class="type">int</span>(<span class="number">5</span>) zerofill;</span><br><span class="line">                    <span class="comment">-- 新电脑入库标记</span></span><br><span class="line">                    <span class="keyword">set</span> <span class="variable">@isNew</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                    <span class="comment">-- 生成库存号</span></span><br><span class="line">                    <span class="keyword">select</span> <span class="built_in">max</span>(<span class="built_in">cast</span>(substr(Stock_ID, <span class="number">2</span>) <span class="keyword">as</span> signed <span class="type">integer</span>))</span><br><span class="line">                    <span class="keyword">into</span> StockID</span><br><span class="line">                    <span class="keyword">from</span> Stock;</span><br><span class="line">                    if StockID <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">                        <span class="keyword">set</span> StockID <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        <span class="keyword">set</span> StockID <span class="operator">=</span> StockID <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">end</span> if;</span><br><span class="line">                    <span class="comment">-- 库存表更新</span></span><br><span class="line">                    <span class="keyword">insert</span> <span class="keyword">into</span> Stock</span><br><span class="line">                        <span class="keyword">value</span> (concat(<span class="string">&#x27;S&#x27;</span>, StockID), ComputerID, WarehouseID, PushNumber);</span><br><span class="line">                <span class="keyword">end</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    <span class="comment">-- 查询该型号电脑的库存ID</span></span><br><span class="line">                    <span class="keyword">select</span> Stock_ID</span><br><span class="line">                    <span class="keyword">into</span> <span class="variable">@CurrentID</span></span><br><span class="line">                    <span class="keyword">from</span> Stock</span><br><span class="line">                    <span class="keyword">where</span> Stock.Computer_ID <span class="operator">=</span> ComputerID</span><br><span class="line">                      <span class="keyword">and</span> Stock.Warehouse_ID <span class="operator">=</span> WarehouseID;</span><br><span class="line">                    <span class="comment">-- 库存表更新</span></span><br><span class="line">                    <span class="keyword">update</span> Stock</span><br><span class="line">                    <span class="keyword">set</span> Number <span class="operator">=</span> Number <span class="operator">+</span> PushNumber</span><br><span class="line">                    <span class="keyword">where</span> Stock_ID <span class="operator">=</span> <span class="variable">@CurrentID</span>;</span><br><span class="line">                    <span class="comment">-- 标记非新电脑入库</span></span><br><span class="line">                    <span class="keyword">set</span> <span class="variable">@isNew</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">end</span>;</span><br><span class="line">            <span class="keyword">end</span> if;</span><br><span class="line">        <span class="keyword">end</span> PushProcedure;</span><br><span class="line">    <span class="keyword">end</span> PUSH;</span><br><span class="line"></span><br><span class="line">    ReturnInfo:</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="comment">-- 生成入库记录ID</span></span><br><span class="line">        <span class="keyword">select</span> <span class="built_in">max</span>(<span class="built_in">cast</span>(substr(InputRecords_ID, <span class="number">2</span>) <span class="keyword">as</span> signed <span class="type">integer</span>))</span><br><span class="line">        <span class="keyword">into</span> RecordsID</span><br><span class="line">        <span class="keyword">from</span> InputRecords;</span><br><span class="line">        if RecordsID <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> RecordsID <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">set</span> RecordsID <span class="operator">=</span> RecordsID <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 根据@isSuccess生成相应入库记录</span></span><br><span class="line">        if <span class="variable">@isSuccess</span> <span class="operator">=</span> <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">            <span class="comment">-- 插入到记录表</span></span><br><span class="line">            <span class="keyword">insert</span> <span class="keyword">into</span> InputRecords</span><br><span class="line">            <span class="keyword">values</span> (concat(<span class="string">&#x27;I&#x27;</span>, RecordsID), ComputerName,</span><br><span class="line">                    WarehouseName, PushNumber,</span><br><span class="line">                    TotalMoney, sysdate(), <span class="variable">@isNew</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">-- 展示本次请求信息</span></span><br><span class="line">            <span class="keyword">select</span> concat(<span class="string">&#x27;I&#x27;</span>, RecordsID)      记录编号,</span><br><span class="line">                   ComputerName                请求入库电脑,</span><br><span class="line">                   WarehouseName               仓库,</span><br><span class="line">                   PushNumber                  入库数量,</span><br><span class="line">                   TotalMoney                  总金额,</span><br><span class="line">                   sysdate()                   操作日期时间,</span><br><span class="line">                   if(<span class="variable">@isNew</span> <span class="operator">=</span> <span class="literal">true</span>, <span class="string">&#x27;是&#x27;</span>, <span class="string">&#x27;否&#x27;</span>) 是否为新型号电脑,</span><br><span class="line">                   <span class="string">&#x27;是&#x27;</span>                         是否成功入库;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment">-- 插入到记录表</span></span><br><span class="line">            <span class="keyword">insert</span> <span class="keyword">into</span> InputRecords</span><br><span class="line">            <span class="keyword">values</span> (concat(<span class="string">&#x27;I&#x27;</span>, RecordsID), ComputerName,</span><br><span class="line">                    WarehouseName, PushNumber, <span class="keyword">null</span>, sysdate(), <span class="keyword">null</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">-- 展示本次请求信息</span></span><br><span class="line">            <span class="keyword">select</span> concat(<span class="string">&#x27;I&#x27;</span>, RecordsID) 记录编号,</span><br><span class="line">                   ComputerName           请求入库电脑,</span><br><span class="line">                   WarehouseName          仓库,</span><br><span class="line">                   PushNumber             入库数量,</span><br><span class="line">                   sysdate()              操作日期时间,</span><br><span class="line">                   <span class="string">&#x27;否&#x27;</span>                    是否成功入库;</span><br><span class="line">        <span class="keyword">end</span> if;</span><br><span class="line">    <span class="keyword">end</span> ReturnInfo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 提交事务</span></span><br><span class="line">    <span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="出库"><a href="#出库" class="headerlink" title="出库"></a>出库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 出库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> Pop(<span class="keyword">in</span> ComputerName <span class="type">varchar</span>(<span class="number">30</span>), <span class="keyword">in</span> WarehouseName <span class="type">varchar</span>(<span class="number">30</span>), <span class="keyword">in</span> PopNumber <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="comment">-- 未出库前库存数量</span></span><br><span class="line">    <span class="keyword">declare</span> NumberInStock <span class="type">int</span>;</span><br><span class="line">    <span class="comment">-- 库存中电脑编号</span></span><br><span class="line">    <span class="keyword">declare</span> ComputerID <span class="type">varchar</span>(<span class="number">6</span>);</span><br><span class="line">    <span class="comment">-- 库存中仓库编号</span></span><br><span class="line">    <span class="keyword">declare</span> WarehouseID <span class="type">varchar</span>(<span class="number">6</span>);</span><br><span class="line">    <span class="comment">-- 要生成的记录ID</span></span><br><span class="line">    <span class="keyword">declare</span> RecordsID <span class="type">int</span>(<span class="number">7</span>) zerofill;</span><br><span class="line"></span><br><span class="line">    POP:</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="comment">-- 查询对应电脑编号</span></span><br><span class="line">        <span class="keyword">select</span> Computer_ID</span><br><span class="line">        <span class="keyword">into</span> ComputerID</span><br><span class="line">        <span class="keyword">from</span> Computer</span><br><span class="line">        <span class="keyword">where</span> Computer_Name <span class="operator">=</span> ComputerName</span><br><span class="line">        limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 查询对应仓库编号</span></span><br><span class="line">        <span class="keyword">select</span> Warehouse_ID</span><br><span class="line">        <span class="keyword">into</span> WarehouseID</span><br><span class="line">        <span class="keyword">from</span> Warehouse</span><br><span class="line">        <span class="keyword">where</span> Warehouse_Name <span class="operator">=</span> WarehouseName</span><br><span class="line">        limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 查询库存中的电脑数量</span></span><br><span class="line">        <span class="keyword">select</span> Number</span><br><span class="line">        <span class="keyword">into</span> NumberInStock</span><br><span class="line">        <span class="keyword">from</span> Stock</span><br><span class="line">        <span class="keyword">where</span> Computer_ID <span class="operator">=</span> ComputerID</span><br><span class="line">          <span class="keyword">and</span> Warehouse_ID <span class="operator">=</span> WarehouseID</span><br><span class="line">        limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 库存中没有这种型号的电脑</span></span><br><span class="line">        if (NumberInStock <span class="keyword">is</span> <span class="keyword">null</span>) <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> <span class="variable">@isSuccess</span> <span class="operator">=</span> <span class="literal">false</span>; <span class="comment">-- 标记请求失败</span></span><br><span class="line">            leave POP;</span><br><span class="line">        <span class="keyword">end</span> if;</span><br><span class="line">        <span class="comment">-- 库存中电脑数量小于待出库电脑数量</span></span><br><span class="line">        if (NumberInStock <span class="operator">&lt;</span> PopNumber) <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> <span class="variable">@isSuccess</span> <span class="operator">=</span> <span class="literal">false</span>; <span class="comment">-- 标记请求失败</span></span><br><span class="line">            leave POP;</span><br><span class="line">        <span class="keyword">end</span> if;</span><br><span class="line">        <span class="comment">-- 库存中电脑数量等于待出库电脑数量</span></span><br><span class="line">        if (NumberInStock <span class="operator">=</span> PopNumber) <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> <span class="variable">@isAllOutput</span> <span class="operator">=</span> <span class="literal">true</span>; <span class="comment">-- 全部出库完</span></span><br><span class="line">        <span class="keyword">end</span> if;</span><br><span class="line">        <span class="comment">-- 库存中电脑数量大于待出库电脑数量</span></span><br><span class="line">        if (NumberInStock <span class="operator">&gt;</span> PopNumber) <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> <span class="variable">@isAllOutput</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 修改Stock表</span></span><br><span class="line">        <span class="keyword">update</span> Stock</span><br><span class="line">        <span class="keyword">set</span> Number <span class="operator">=</span> Number <span class="operator">-</span> PopNumber</span><br><span class="line">        <span class="keyword">where</span> Computer_ID <span class="operator">=</span> ComputerID</span><br><span class="line">          <span class="keyword">and</span> Warehouse_ID <span class="operator">=</span> WarehouseID;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">set</span> <span class="variable">@isSuccess</span> <span class="operator">=</span> <span class="literal">true</span>; <span class="comment">-- 标记请求成功</span></span><br><span class="line">    <span class="keyword">end</span> POP;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 生成出库记录ID</span></span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">max</span>(<span class="built_in">cast</span>(substr(OutputRecords_ID, <span class="number">2</span>) <span class="keyword">as</span> signed <span class="type">integer</span>))</span><br><span class="line">    <span class="keyword">into</span> RecordsID</span><br><span class="line">    <span class="keyword">from</span> OutputRecords;</span><br><span class="line">    if RecordsID <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">set</span> RecordsID <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">set</span> RecordsID <span class="operator">=</span> RecordsID <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 根据@isSuccess生成相应入库记录</span></span><br><span class="line">    if <span class="variable">@isSuccess</span> <span class="operator">=</span> <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 生成出库记录</span></span><br><span class="line">        <span class="keyword">insert</span> <span class="keyword">into</span> OutputRecords</span><br><span class="line">        <span class="keyword">values</span> (concat(<span class="string">&#x27;O&#x27;</span>, RecordsID), ComputerName,</span><br><span class="line">                WarehouseName, PopNumber, sysdate(), <span class="variable">@isAllOutput</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 展示本次请求信息</span></span><br><span class="line">        <span class="keyword">select</span> concat(<span class="string">&#x27;O&#x27;</span>, RecordsID)            记录编号,</span><br><span class="line">               ComputerName                      请求出库电脑,</span><br><span class="line">               WarehouseName                     仓库,</span><br><span class="line">               PopNumber                         出库数量,</span><br><span class="line">               sysdate()                         操作日期时间,</span><br><span class="line">               if(<span class="variable">@isAllOutput</span> <span class="operator">=</span> <span class="literal">true</span>, <span class="string">&#x27;是&#x27;</span>, <span class="string">&#x27;否&#x27;</span>) 是否全部出库完,</span><br><span class="line">               <span class="string">&#x27;是&#x27;</span>                               是否成功出库;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment">-- 生成出库记录</span></span><br><span class="line">        <span class="keyword">insert</span> <span class="keyword">into</span> OutputRecords</span><br><span class="line">        <span class="keyword">values</span> (concat(<span class="string">&#x27;O&#x27;</span>, RecordsID), ComputerName,</span><br><span class="line">                WarehouseName, PopNumber, sysdate(), <span class="keyword">null</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 展示本次请求信息</span></span><br><span class="line">        <span class="keyword">select</span> concat(<span class="string">&#x27;O&#x27;</span>, RecordsID) 记录编号,</span><br><span class="line">               ComputerName           请求出库电脑,</span><br><span class="line">               WarehouseName          仓库,</span><br><span class="line">               PopNumber              出库数量,</span><br><span class="line">               sysdate()              操作日期时间,</span><br><span class="line">               <span class="string">&#x27;否&#x27;</span>                    是否成功出库;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 提交事务</span></span><br><span class="line">    <span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="查询仓库"><a href="#查询仓库" class="headerlink" title="查询仓库"></a>查询仓库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询仓库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> ShowStock()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">select</span> Stock_ID            编号,</span><br><span class="line">           Computer_Brand      品牌,</span><br><span class="line">           Computer_Name       型号,</span><br><span class="line">           Computer_Unit_Price 单价,</span><br><span class="line">           Number              数量,</span><br><span class="line">           Warehouse_Name      仓库地址,</span><br><span class="line">           Supplier_Name       供货商</span><br><span class="line">    <span class="keyword">from</span> Stock,</span><br><span class="line">         Computer,</span><br><span class="line">         Warehouse,</span><br><span class="line">         Supplier</span><br><span class="line">    <span class="keyword">where</span> Stock.Computer_ID <span class="operator">=</span> Computer.Computer_ID</span><br><span class="line">      <span class="keyword">and</span> Stock.Warehouse_ID <span class="operator">=</span> Warehouse.Warehouse_ID</span><br><span class="line">      <span class="keyword">and</span> Computer.Supplier_ID <span class="operator">=</span> Supplier.Supplier_ID;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h3 id="SQL语句执行"><a href="#SQL语句执行" class="headerlink" title="SQL语句执行"></a>SQL语句执行</h3><h4 id="登记相关信息"><a href="#登记相关信息" class="headerlink" title="登记相关信息"></a>登记相关信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加供货商</span></span><br><span class="line"><span class="keyword">call</span> AddSupplier(<span class="string">&#x27;供货商一&#x27;</span>, <span class="string">&#x27;供货商一地址&#x27;</span>, <span class="string">&#x27;02710000001&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddSupplier(<span class="string">&#x27;供货商二&#x27;</span>, <span class="string">&#x27;供货商二地址&#x27;</span>, <span class="string">&#x27;02710000002&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddSupplier(<span class="string">&#x27;供货商三&#x27;</span>, <span class="string">&#x27;供货商三地址&#x27;</span>, <span class="string">&#x27;02710000003&#x27;</span>);</span><br><span class="line"><span class="comment">-- 添加仓库</span></span><br><span class="line"><span class="keyword">call</span> AddWarehouse(<span class="string">&#x27;仓库一&#x27;</span>, <span class="string">&#x27;仓库一地址&#x27;</span>, <span class="string">&#x27;02720000001&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddWarehouse(<span class="string">&#x27;仓库二&#x27;</span>, <span class="string">&#x27;仓库二地址&#x27;</span>, <span class="string">&#x27;02720000002&#x27;</span>);</span><br><span class="line"><span class="comment">-- 添加电脑</span></span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;Lenovo-Air14&#x27;</span>, <span class="string">&#x27;Lenovo&#x27;</span>, <span class="number">5999</span>, <span class="string">&#x27;供货商一&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;Lenovo-R7000&#x27;</span>, <span class="string">&#x27;Lenovo&#x27;</span>, <span class="number">6057</span>, <span class="string">&#x27;供货商一&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;Lenovo-Yoga14&#x27;</span>, <span class="string">&#x27;Lenovo&#x27;</span>, <span class="number">6299</span>, <span class="string">&#x27;供货商一&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;Lenovo-Pro14&#x27;</span>, <span class="string">&#x27;Lenovo&#x27;</span>, <span class="number">6299</span>, <span class="string">&#x27;供货商二&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;MiBook-Pro-15.6&#x27;</span>, <span class="string">&#x27;XiaoMi&#x27;</span>, <span class="number">6999</span>, <span class="string">&#x27;供货商二&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;Dell-G3&#x27;</span>, <span class="string">&#x27;Dell&#x27;</span>, <span class="number">6999</span>, <span class="string">&#x27;供货商二&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;Dell-XPS13&#x27;</span>, <span class="string">&#x27;Dell&#x27;</span>, <span class="number">8888</span>, <span class="string">&#x27;供货商二&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;MacBook-Pro-13&#x27;</span>, <span class="string">&#x27;Apple&#x27;</span>, <span class="number">9199</span>, <span class="string">&#x27;供货商三&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;MacBook-Pro-16&#x27;</span>, <span class="string">&#x27;Apple&#x27;</span>, <span class="number">17399</span>, <span class="string">&#x27;供货商三&#x27;</span>);</span><br><span class="line"><span class="keyword">call</span> AddComputer(<span class="string">&#x27;Surface-Pro-7&#x27;</span>, <span class="string">&#x27;Microsoft&#x27;</span>, <span class="number">5788</span>, <span class="string">&#x27;供货商三&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="入库-1"><a href="#入库-1" class="headerlink" title="入库"></a>入库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> Push(<span class="string">&#x27;MacBook-Pro-16&#x27;</span>, <span class="string">&#x27;仓库一&#x27;</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">call</span> Push(<span class="string">&#x27;MacBook-Pro-16&#x27;</span>, <span class="string">&#x27;仓库一&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">call</span> Push(<span class="string">&#x27;Dell-G3&#x27;</span>, <span class="string">&#x27;仓库一&#x27;</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">call</span> Push(<span class="string">&#x27;Lenovo-Pro14&#x27;</span>, <span class="string">&#x27;仓库二&#x27;</span>, <span class="number">45</span>);</span><br><span class="line"><span class="keyword">call</span> Push(<span class="string">&#x27;Lenovo&#x27;</span>, <span class="string">&#x27;仓库二&#x27;</span>, <span class="number">20</span>); <span class="comment">-- 这个是拒绝入库的示例</span></span><br></pre></td></tr></table></figure><h4 id="出库-1"><a href="#出库-1" class="headerlink" title="出库"></a>出库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> Pop(<span class="string">&#x27;Lenovo-Pro14&#x27;</span>, <span class="string">&#x27;仓库二&#x27;</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">call</span> Pop(<span class="string">&#x27;MacBook-Pro-16&#x27;</span>, <span class="string">&#x27;仓库一&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">call</span> Pop(<span class="string">&#x27;Lenovo-Pro14&#x27;</span>, <span class="string">&#x27;仓库二&#x27;</span>, <span class="number">15</span>);</span><br><span class="line"><span class="keyword">call</span> Pop(<span class="string">&#x27;Lenovo-Pro14&#x27;</span>, <span class="string">&#x27;仓库二&#x27;</span>, <span class="number">1000</span>); <span class="comment">-- 这个是拒绝出库的示例</span></span><br></pre></td></tr></table></figure><h3 id="查询结果展示"><a href="#查询结果展示" class="headerlink" title="查询结果展示"></a>查询结果展示</h3><h4 id="查询供货商表"><a href="#查询供货商表" class="headerlink" title="查询供货商表"></a>查询供货商表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Supplier_ID      编号,</span><br><span class="line">       Supplier_Name    名称,</span><br><span class="line">       Supplier_Address 地址,</span><br><span class="line">       Supplier_Tel     电话</span><br><span class="line"><span class="keyword">from</span> Supplier;</span><br></pre></td></tr></table></figure><p>结果展示：</p><p><img src="https://img-blog.csdnimg.cn/20201208215149439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70" alt="查询供货商表"></p><h4 id="查询仓库表"><a href="#查询仓库表" class="headerlink" title="查询仓库表"></a>查询仓库表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Warehouse_ID      编号,</span><br><span class="line">       Warehouse_Name    名称,</span><br><span class="line">       Warehouse_Address 地址,</span><br><span class="line">       Warehouse_Tel     电话</span><br><span class="line"><span class="keyword">from</span> Warehouse;</span><br></pre></td></tr></table></figure><p>结果展示：</p><p><img src="https://img-blog.csdnimg.cn/20201208215404966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h4 id="查询电脑表"><a href="#查询电脑表" class="headerlink" title="查询电脑表"></a>查询电脑表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Computer_ID         编号,</span><br><span class="line">       Computer_Name       型号,</span><br><span class="line">       Computer_Brand      品牌,</span><br><span class="line">       Computer_Unit_Price 价格,</span><br><span class="line">       Supplier_Name       供货商</span><br><span class="line"><span class="keyword">from</span> Computer,</span><br><span class="line">     Supplier</span><br><span class="line"><span class="keyword">where</span> Supplier.Supplier_ID <span class="operator">=</span> Computer.Supplier_ID</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> Computer_ID <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><p>结果展示：</p><p><img src="https://img-blog.csdnimg.cn/20201208215539132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h4 id="查询库存"><a href="#查询库存" class="headerlink" title="查询库存"></a>查询库存</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> ShowStock;</span><br></pre></td></tr></table></figure><p>结果展示：</p><p><img src="https://img-blog.csdnimg.cn/20201208215713696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h4 id="查询入库记录"><a href="#查询入库记录" class="headerlink" title="查询入库记录"></a>查询入库记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> InputRecords_ID             序号,</span><br><span class="line">       Computer_Name               请求入库电脑,</span><br><span class="line">       Warehouse_Name              仓库,</span><br><span class="line">       Input_Number                出库数量,</span><br><span class="line">       Input_DateTime              操作时间,</span><br><span class="line">       <span class="keyword">case</span> isNewTypeComputer</span><br><span class="line">           <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;是&#x27;</span></span><br><span class="line">           <span class="keyword">when</span> <span class="number">0</span> <span class="keyword">then</span> <span class="string">&#x27;否&#x27;</span></span><br><span class="line">           <span class="keyword">when</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="keyword">null</span></span><br><span class="line">           <span class="keyword">end</span>                     是否为新型号电脑,</span><br><span class="line">       if(isSuccess <span class="operator">=</span> <span class="number">1</span>, <span class="string">&#x27;是&#x27;</span>, <span class="string">&#x27;否&#x27;</span>) 成功入库否</span><br><span class="line"><span class="keyword">from</span> InputRecords;</span><br></pre></td></tr></table></figure><p>结果展示：<br><img src="https://img-blog.csdnimg.cn/20201208215900680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h4 id="查询出库记录"><a href="#查询出库记录" class="headerlink" title="查询出库记录"></a>查询出库记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OutputRecords_ID              序号,</span><br><span class="line">       Computer_Name                 请求出库电脑,</span><br><span class="line">       Warehouse_Name                仓库,</span><br><span class="line">       Output_Number                 出库数量,</span><br><span class="line">       Output_DateTime               操作时间,</span><br><span class="line">       <span class="keyword">case</span> isAllOutput</span><br><span class="line">           <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;是&#x27;</span></span><br><span class="line">           <span class="keyword">when</span> <span class="number">0</span> <span class="keyword">then</span> <span class="string">&#x27;否&#x27;</span></span><br><span class="line">           <span class="keyword">when</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="keyword">null</span></span><br><span class="line">           <span class="keyword">end</span>                       是否全部出库完,</span><br><span class="line">       if(isSuccess <span class="operator">=</span> <span class="number">1</span>, <span class="string">&#x27;是&#x27;</span>, <span class="string">&#x27;否&#x27;</span>) 成功出库否</span><br><span class="line"><span class="keyword">from</span> OutputRecords;</span><br></pre></td></tr></table></figure><p>结果展示：<br><img src="https://img-blog.csdnimg.cn/20201208220038527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过本次考查报告，从需求分析、概念结构设计、逻辑结构设计到数据库表实施，掌握了设计数据库的有关步骤。通过前期准备，掌握了数据库的理论、E-R图的构建。<br>本次使用了MySQL数据库将理论转换为实践，初步掌握了MySQL建库、建表的语句。并编写了存储过程语句，使得数据库操作简便化。在编写SQL语句时，查阅了许多资料，增强了动手能力。<br>本次数据的设计仍有不足，如没有考虑到数据库的多用户操作，应当对每个仓库设立若干管理员，只进行本仓库的管理，细分数据库操作，也符合实际情况，这是数据设计的改进方向。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;需求分析&quot;&gt;&lt;a href=&quot;#需求分析&quot; class=&quot;headerlink&quot; title=&quot;需求分析&quot;&gt;&lt;/a&gt;需求分析&lt;/h2&gt;&lt;p&gt;现要求开发电脑仓库管理系统。电脑仓库管理系统主要针对电脑的库存信息管理，对于仓库日常发生的业务，分为两大类，即入库和出库。经过数据库的设计后，用户通过相应的模块，对仓库进行简单的基本操作，即可轻松管理仓库。&lt;br&gt;经过可行性分析和初步的需求调查，确定了系统的功能边界，该系统应能完成下面的功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;信息登记：在数据库中添加相关电脑、供货商、仓库的信息；&lt;/li&gt;
&lt;li&gt;入库：增加电脑库存并生成入库记录；&lt;/li&gt;
&lt;li&gt;出库：减少电脑库存并生成出库记录。&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="课程设计" scheme="https://codexin.cn/categories/%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="MySQL" scheme="https://codexin.cn/tags/MySQL/"/>
    
    <category term="数据库" scheme="https://codexin.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>《数字逻辑》课程设计</title>
    <link href="https://codexin.cn/post/course-design-of-digital-logic/"/>
    <id>https://codexin.cn/post/course-design-of-digital-logic/</id>
    <published>2020-12-02T14:11:11.000Z</published>
    <updated>2023-03-19T13:11:22.202Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目一：数字电子钟设计"><a href="#题目一：数字电子钟设计" class="headerlink" title="题目一：数字电子钟设计"></a>题目一：数字电子钟设计</h2><h3 id="设计任务及要求"><a href="#设计任务及要求" class="headerlink" title="设计任务及要求"></a>设计任务及要求</h3><ol><li>任务<br>用计数器设计一个电子钟，显示时、分、秒。</li><li>要求<br>（1） 小时为 00-23 二十四进制计数器，分、秒为 00-59 六十进制计数器；<br>（2） 用八段数码管进行显示时、分、秒。<br>（3） 用 Logisim 画图，并进行仿真。要求能看到正确的时、分、秒信息。<br>（4） 先用 Logisim 软件仿真测试是否正确，再提交网站（EduCoder）测评。</li></ol><h3 id="实验条件"><a href="#实验条件" class="headerlink" title="实验条件"></a>实验条件</h3><ol><li>Java Runtime Environment 环境</li><li>Logisim虚拟数字电路仿真平台</li></ol><h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><h4 id="设计原理与思路"><a href="#设计原理与思路" class="headerlink" title="设计原理与思路"></a>设计原理与思路</h4><h5 id="4位递增计数器的设计"><a href="#4位递增计数器的设计" class="headerlink" title="4位递增计数器的设计"></a>4位递增计数器的设计</h5><p>数字电子钟的基本组成单元由4位递增计数器构成，在进行其他器件设计前，先要完成4位递增计数器的设计。<br>计数是一种最简单的基本运算。计数器就是实现这种运算的逻辑电路，计数器在数字系统中主要是对脉冲的个数进行计数，以实现测量、计数和控制的功能，同时兼有分频功能。计数器在数字系统中应用广泛，如在电子计算机的控制器中对指令地址进行计数，以便顺序取出下一条指令，等等。<br>这里设计了一个带有同步置数、异步清零功能的4位同步递增计数器。<br>引脚说明：</p><table><thead><tr><th>信号</th><th>输入输出</th><th>位宽</th><th>说明</th></tr></thead><tbody><tr><td>Clock</td><td>输入</td><td>1位</td><td>时钟脉冲，上升沿有效</td></tr><tr><td>Reset</td><td>输入</td><td>1位</td><td>异步清零端：Reset&#x3D;1时，Q&#x3D;0</td></tr><tr><td>Enable</td><td>输入</td><td>1位</td><td>使能端：Reset&#x3D;0时，Enable&#x3D;1递增计数、0保持</td></tr><tr><td>Load</td><td>输入</td><td>1位</td><td>同步置数端：Reset&#x3D;0、Load&#x3D;1、Clock上升沿时，Q&#x3D;D</td></tr><tr><td>D</td><td>输入</td><td>4位</td><td>并行数据加载端</td></tr><tr><td>Q</td><td>输出</td><td>4位</td><td>状态输出端</td></tr></tbody></table><p>具有并行加载功能的计数器原理如下图所示：<br><img src="https://img-blog.csdnimg.cn/20201229214732581.png"><br>将4位递增计数器封装后的外观：<br><img src="https://img-blog.csdnimg.cn/20201229214751492.png"></p><h5 id="六进制计数器的设计"><a href="#六进制计数器的设计" class="headerlink" title="六进制计数器的设计"></a>六进制计数器的设计</h5><p>六进制计数器可由4位递增计数器构成，当4位递增计数器计数到6时，异步清零使Q&#x3D;0，这样就完成了六进制计数器的功能。<br>六进制计数器是构成六十进制计数器的基础。</p><h5 id="十进制计数器的设计"><a href="#十进制计数器的设计" class="headerlink" title="十进制计数器的设计"></a>十进制计数器的设计</h5><p>十进制计数器可由4位递增计数器构成，当4位递增计数器计数到10时，异步清零使Q&#x3D;0，这样就完成了十进制计数器的功能。<br>十进制计数器是构成六十进制计数器的基础。</p><h5 id="六十进制计数器的设计"><a href="#六十进制计数器的设计" class="headerlink" title="六十进制计数器的设计"></a>六十进制计数器的设计</h5><p>六十进制计数器可由六进制计数器和十进制计数器构成，10进制计数器的进位输出端是六进制计数器的使能端（Enable）触发条件，每十次触发一次6进制计数器，而6进制计数器本身最大计数为6，这样就完成了六十进制计数器的功能。<br>六十进制计数器是构成数字电子钟的基础。</p><h5 id="24进制计数器的设计"><a href="#24进制计数器的设计" class="headerlink" title="24进制计数器的设计"></a>24进制计数器的设计</h5><p>24进制计数器可由两个十进制计数器构成。<br>可用第一个十进制表示个位，记为计数器A。第二个十进制计数器表示十位，记为计数器B。<br>计数器A的进位输出端是计数器B的使能端（Enable）触发条件，每十次触发一次计数器B，同时，检测计数器A和B的状态输出端，当状态值为23时，使整个电路的进位输出端为1，当状态值为24时，异步清零，使计数器A和B的Q均为0。这样就完成了24进制计数器的功能。<br>24进制计数器是构成数字电子钟的基础。</p><h5 id="数字电子钟的设计"><a href="#数字电子钟的设计" class="headerlink" title="数字电子钟的设计"></a>数字电子钟的设计</h5><p>数字电子钟由小时（0-23）、分钟（0-59）、秒（0-60）构成。<br>秒由六十进制计数器构成，计数的条件是时钟的滴答。所以，在实际仿真的时候，可以调整时钟频率为1Hz，使其符合1秒1次的计数规则。<br>分钟由六十进制计数器构成，计数的条件是当秒钟产生进位。<br>小时由24进制计数器构成，计数的条件是当分钟和秒钟同时产生进位。<br>在实际仿真中，用16进制数字显示器件（Hex Digit Display）显示上述器件产生的状态，这样就完成了数字电子钟的功能和设计。</p><h4 id="逻辑电路图"><a href="#逻辑电路图" class="headerlink" title="逻辑电路图"></a>逻辑电路图</h4><p>4位递增计数器：<br><img src="https://img-blog.csdnimg.cn/20201229215136658.png"><br>六进制计数器：<br><img src="https://img-blog.csdnimg.cn/20201229215215307.png"><br>十进制计数器：<br><img src="https://img-blog.csdnimg.cn/20201229215237491.png"><br>六十进制计数器：<br><img src="https://img-blog.csdnimg.cn/20201229215302132.png"><br>24进制计数器：<br><img src="https://img-blog.csdnimg.cn/20201229215320745.png"><br>数字电子钟：<br><img src="https://img-blog.csdnimg.cn/20201229215414757.png"></p><h3 id="实验测试"><a href="#实验测试" class="headerlink" title="实验测试"></a>实验测试</h3><p>将Clock信号，由手动点击改为时钟连续，将使能端Enable启动，然后进行测试：<br><img src="https://img-blog.csdnimg.cn/2020122921545320.png"></p><h2 id="题目二：路灯巡回检测器"><a href="#题目二：路灯巡回检测器" class="headerlink" title="题目二：路灯巡回检测器"></a>题目二：路灯巡回检测器</h2><h3 id="设计任务及要求-1"><a href="#设计任务及要求-1" class="headerlink" title="设计任务及要求"></a>设计任务及要求</h3><ol><li>任务<br>用 Verilog 语言设计 8 个路灯巡回检测电路。</li><li>要求<ol><li>巡回检测 8 个路灯，并用 8 个 LED 灯显示好坏。路灯正常时对应的 LED 灯熄灭，路灯故障时对应的 LED 灯点亮；</li><li>能够迅速、准确地判出哪一个路灯坏，并用一个七段数码管显示出故障 灯的总数；</li><li>有启动停止开关。</li><li>自行绑定开发板的管脚，并下载到开发板上观察实际效果。</li></ol></li></ol><h3 id="实验条件-1"><a href="#实验条件-1" class="headerlink" title="实验条件"></a>实验条件</h3><ol><li>Verilog编程和EDA设计工具：Altera Quartus Ⅱ 11.0</li><li>FPGA开发板：Altera DE2-115</li></ol><h3 id="设计过程-1"><a href="#设计过程-1" class="headerlink" title="设计过程"></a>设计过程</h3><h4 id="设计原理和思路"><a href="#设计原理和思路" class="headerlink" title="设计原理和思路"></a>设计原理和思路</h4><p>使用一个开关作为使能端，控制整个检测器的启动与停止。<br>当使能端关闭时，每个路灯无论其是否为故障状态，都不点亮对应的LED灯。同时，七段数码管也不点亮。<br>当使能端开启时，设定一个<code>cnt</code>作为计数器，使用<code>always</code>语句检测每一个路灯是否故障，如果该路灯故障，点亮对应的LED灯，并使<code>cnt</code>计数器（每次循环前，<code>cnt</code>置零）加<code>1</code>；如果该路灯不故障，用七段数码管<code>hex</code>显示<code>cnt</code>对应的数字。</p><h4 id="Verilog代码"><a href="#Verilog代码" class="headerlink" title="Verilog代码"></a>Verilog代码</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> street_lamp_detector(w, hex, leds);</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">8</span>:<span class="number">0</span>] w;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] cnt;</span><br><span class="line">    <span class="keyword">integer</span> k;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">0</span>:<span class="number">7</span>] leds;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">0</span>:<span class="number">6</span>] hex;</span><br><span class="line">    <span class="keyword">always</span> @(w, cnt)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(w[<span class="number">8</span>] == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; <span class="number">8</span>; k = k + <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">if</span>(w[k] == <span class="number">1</span>)</span><br><span class="line">                        <span class="keyword">begin</span></span><br><span class="line">                            leds[k] = <span class="number">1</span>;</span><br><span class="line">                            cnt = cnt + <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        leds[k] = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">case</span> (cnt)</span><br><span class="line">                            <span class="number">0</span>: hex = <span class="number">7&#x27;b0000001</span>;</span><br><span class="line">                            <span class="number">1</span>: hex = <span class="number">7&#x27;b1001111</span>;</span><br><span class="line">                            <span class="number">2</span>: hex = <span class="number">7&#x27;b0010010</span>;</span><br><span class="line">                            <span class="number">3</span>: hex = <span class="number">7&#x27;b0000110</span>;</span><br><span class="line">                            <span class="number">4</span>: hex = <span class="number">7&#x27;b1001100</span>;</span><br><span class="line">                            <span class="number">5</span>: hex = <span class="number">7&#x27;b0100100</span>;</span><br><span class="line">                            <span class="number">6</span>: hex = <span class="number">7&#x27;b0100000</span>;</span><br><span class="line">                            <span class="number">7</span>: hex = <span class="number">7&#x27;b0001111</span>;</span><br><span class="line">                            <span class="number">8</span>: hex = <span class="number">7&#x27;b0000000</span>;</span><br><span class="line">                            <span class="keyword">default</span>: hex = <span class="number">7&#x27;b1111111</span>;</span><br><span class="line">                        <span class="keyword">endcase</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">                hex = <span class="number">7&#x27;b1111111</span>;</span><br><span class="line">                leds[<span class="number">0</span>:<span class="number">7</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="实验测试-1"><a href="#实验测试-1" class="headerlink" title="实验测试"></a>实验测试</h3><h4 id="开发板引脚分配"><a href="#开发板引脚分配" class="headerlink" title="开发板引脚分配"></a>开发板引脚分配</h4><p>引脚绑定设置如下：<br><img src="https://img-blog.csdnimg.cn/20201229220253874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h4 id="联机调试"><a href="#联机调试" class="headerlink" title="联机调试"></a>联机调试</h4><p>① 使能端Enable未启动（SW8为0）<br>此时，所有器件不工作：<br><img src="https://img-blog.csdnimg.cn/20201229220425113.png"><br>② 使能端Enable启动（SW8为1）<br>如下面两图所示，7端数码管HEX0可以根据正确显示：SW0-SW7的对应故障个数：<br><img src="https://img-blog.csdnimg.cn/20201229220546662.png"><br><img src="https://img-blog.csdnimg.cn/20201229220602917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过本次课程设计，掌握了有关同步时序电路的知识，了解了同步时序电路的基本设计步骤，并同通过这些知识设计出了基于时序电路的计数器，完成了数字电子钟的仿真设计。<br>通过本次课程设计，掌握了Verilog语言的基本特征，学习了<code>always</code>、<code>if</code>、<code>case</code>等语句。结合Altera ED2-115开发版，通过Verilog语言进行编程，最终实现了一个路灯巡回检测器。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目一：数字电子钟设计&quot;&gt;&lt;a href=&quot;#题目一：数字电子钟设计&quot; class=&quot;headerlink&quot; title=&quot;题目一：数字电子钟设计&quot;&gt;&lt;/a&gt;题目一：数字电子钟设计&lt;/h2&gt;&lt;h3 id=&quot;设计任务及要求&quot;&gt;&lt;a href=&quot;#设计任务及要求&quot; c</summary>
      
    
    
    
    <category term="课程设计" scheme="https://codexin.cn/categories/%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="数字电路" scheme="https://codexin.cn/tags/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://codexin.cn/tags/FPGA/"/>
    
  </entry>
  
  <entry>
    <title>《数据结构》课程设计</title>
    <link href="https://codexin.cn/post/course-design-of-data-structure/"/>
    <id>https://codexin.cn/post/course-design-of-data-structure/</id>
    <published>2020-11-28T05:45:25.000Z</published>
    <updated>2023-03-19T13:11:22.198Z</updated>
    
    <content type="html"><![CDATA[<p>课程设计选题：仓库管理系统</p><span id="more"></span><h2 id="题目与要求"><a href="#题目与要求" class="headerlink" title="题目与要求"></a>题目与要求</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>某电子公司仓库中有若干批次的同一种电脑，按价格、数量来存储。<br>要求实现功能:</p><ol><li>   初始化 n 批不同价格电脑入库；</li><li>   出库：销售m台价格为p的电脑；</li><li>   入库：新到m台价格为p的电脑；</li><li>   盘点：电脑的总台数，总金额，最高价，最低价，平均价格。</li></ol><p>注：每个数据元素含有价格与数量；同一价格的电脑存储为一个数据元素。</p><h3 id="系统涉及知识点"><a href="#系统涉及知识点" class="headerlink" title="系统涉及知识点"></a>系统涉及知识点</h3><p>仓库管理系统可以使用顺序表、有序表、单链表、有序循环链表等实现，本设计采用有序表实现。<br>所谓有序表，是指这样的线性表，其中所有的元素以递增或递减方式有序排列。<br>首先要指出的是，有序表是基于顺序表而延伸出来的一种数据结构，其共同点是用一组地址连续的存储单元依次存储线性表的数据元素。<br>其次，是有序表的独特之处，它其中的数据元素按照一定的顺序有序排列。<br>仓库管理系统适合采用有序表，原因是可以按照商品的价格或数量进行有序排列，方便用户比对价格、数量。</p><h2 id="功能要求"><a href="#功能要求" class="headerlink" title="功能要求"></a>功能要求</h2><ol><li><p>   初始化仓库：初始化n批不同型号的电脑入库；</p></li><li><p>   入库：新到m台价格为p的电脑；</p></li><li><p>   出库：销售m台价格为p的电脑；</p></li><li><p>   盘点仓库：列出仓库的关键数据：电脑的总台数、总金额、最高价、平均价格等；</p><p>  按照有序表的特点以及所使用的编程语言（C++）的特性，本程序还提供了以下功能：</p></li><li><p>   查询某一型号的电脑的价格、数量；</p></li><li><p>   重新对仓库数据按照一定规则排序；</p></li><li><p>   导出仓库数据到外部文件；</p></li><li><p>   从外部文件导入数据，以初始化仓库。</p></li></ol><h2 id="功能设计"><a href="#功能设计" class="headerlink" title="功能设计"></a>功能设计</h2><h3 id="数据结构定义"><a href="#数据结构定义" class="headerlink" title="数据结构定义"></a>数据结构定义</h3><p>一、基本数据元素：电脑</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">computer</span> {</span><br><span class="line">    <span class="type">char</span> type[<span class="number">50</span>];  <span class="comment">// 型号</span></span><br><span class="line">    <span class="type">double</span> price;   <span class="comment">// 价格</span></span><br><span class="line">    <span class="type">int</span> number;     <span class="comment">// 数量</span></span><br><span class="line">} Computer, ElemType;</span><br></pre></td></tr></table></figure><p>基本数据元素电脑（<code>Computer</code>/<code>ElemType</code>）采用结构体表示，用于存储某一类电脑的信息：型号（<code>type[50]</code>）、价格（<code>price</code>）、库存数量（<code>number</code>）。<br>二、数据结构：有序表</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> {</span><br><span class="line">    ElemType *elem;     <span class="comment">// 基地址</span></span><br><span class="line">    <span class="type">int</span> length;         <span class="comment">// 当前有效数据的个数</span></span><br><span class="line">    <span class="type">int</span> listsize;       <span class="comment">// 当前存储容量(单位是sizeof(ElemType))</span></span><br><span class="line">    <span class="type">bool</span> isInit{<span class="literal">false</span>}; <span class="comment">// 顺序表是否已经初始化</span></span><br><span class="line">    <span class="type">int</span> sortWay{<span class="number">1</span>};     <span class="comment">// 顺序表的排序方式</span></span><br><span class="line">} SqList;</span><br></pre></td></tr></table></figure><p>数据结构有序表（<code>SqList</code>）由以下几个部分组成：</p><ol><li>   数组指针<code>elem</code>指示有序表的基地址；</li><li>   <code>length</code>指示有序表的当前有效数据个数（长度）；</li><li>   <code>listsize</code>指示有序表当前分配的存储空间大小，一旦因插入数据元素（<code>Computer</code>）而空间不足时，可进行再分配；</li><li>   <code>isInit</code>指示有序表是否已经初始化（即是否有一个确定的基地址）；</li><li>   <code>sortWay</code>指示有序表的排序方式，按照值的不同，对应的有序表排序方式也不同。本程序具体设计了以下四种排序方式：1-按照价格升序、2-按照价格降序、3-按照数量升序、4-按照数量降序。</li></ol><p>整体的数据结构如下图所示：<br><img src="https://img-blog.csdnimg.cn/20201230123554943.png"></p><h3 id="模块图"><a href="#模块图" class="headerlink" title="模块图"></a>模块图</h3><h4 id="入库"><a href="#入库" class="headerlink" title="入库"></a>入库</h4><p>入库有两种方式，一是在仓库中已有和待入库电脑型号相同的数据，此时，检查给出的价格是否与仓库中一致，若一致，同意用户的入库操作。然后只需更改仓库中此种电脑型号的数量。<br>示意图如下：<br> <img src="https://img-blog.csdnimg.cn/20201230123728727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><p>第二种方式，入库一种新型号的电脑，则应该按照有序表的排序方式（<code>sortWay</code>）在正确位置插入元素。<br>示意图如下：<br> <img src="https://img-blog.csdnimg.cn/20201230123736468.png"></p><h4 id="出库"><a href="#出库" class="headerlink" title="出库"></a>出库</h4><p>可以出库的前提是，在仓库中有待出库型号的电脑且仓库中的库存数量大于等于待出库数量。<br>第一类情况，待出库电脑的数量在库存中充足（即库存数量大于待出库数量），此时只需更改相应的数据元素。<br>示意图如下：<br><img src="https://img-blog.csdnimg.cn/20201230123845921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"><br>第二类情况，此种型号的电脑恰好全部出库完，则需要删除相应的数据元素。<br>示意图如下：<br><img src="https://img-blog.csdnimg.cn/20201230123857810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h2 id="功能代码"><a href="#功能代码" class="headerlink" title="功能代码"></a>功能代码</h2><h3 id="初始化动态顺序表"><a href="#初始化动态顺序表" class="headerlink" title="初始化动态顺序表"></a>初始化动态顺序表</h3><p>有序表的数据结构是基于顺序表实现的，所以在进行一切操作前，应当初始化一个空的动态顺序表。<br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">InitSqList</span><span class="params">(SqList &amp;L, <span class="type">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">auto</span> listsize{((n / <span class="number">10</span>) + <span class="number">1</span>) * <span class="number">10</span>}; <span class="comment">// 确定顺序表初始内存占用空间</span></span><br><span class="line">    L.elem = <span class="keyword">new</span> ElemType[listsize];    <span class="comment">// 分配基地址、顺序表内存</span></span><br><span class="line">    <span class="keyword">if</span> (!L.elem)    <span class="comment">// 内存不足</span></span><br><span class="line">        <span class="keyword">return</span> OVERFLOW;</span><br><span class="line">    L.length = <span class="number">0</span>;   <span class="comment">// 此时顺序表还没有元素，L.length为0</span></span><br><span class="line">    L.listsize = listsize;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>有序表初始分配的内存空间（<code>listsize</code>）并没有简单采用一个常数大小（如<code>10</code>个<code>ElemType</code>字节），这样不用限制用户输入的电脑类型最大个数，对用户友好。具体是通过给定的<code>n</code>，计算表达式<code>((n/10)+1)*10</code>，使得初始分配的内存为<code>10</code>的整数倍大小的<code>ElemType</code>字节，比如<code>n</code>为<code>12</code>，表达式<code>((n/10)+1)*10</code>则为<code>20</code>。</p><p>需要注意的是，初始化动态顺序表时，还暂无数据元素，<code>L.length</code>应为<code>0</code>。</p><h3 id="创建（初始化）仓库"><a href="#创建（初始化）仓库" class="headerlink" title="创建（初始化）仓库"></a>创建（初始化）仓库</h3><p>创建仓库的前提是，已经初始化过一个空的动态顺序表，这个检测可以在主函数中完成。<br>创建有序表式的仓库步骤：</p><ol><li>   输入n个数据元素，存储到顺序表中；</li><li>   对已创建的顺序表按照有序表的排序方式（<code>L.sortWay</code>）进行快速排序。</li><li>   更新有序表的相应参数（<code>length</code>、<code>isInit</code>、<code>sortWay</code>）<br>代码如下：</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreateWarehouse</span><span class="params">(SqList &amp;L, <span class="type">int</span> n, <span class="type">int</span> sort_way)</span> </span>{</span><br><span class="line">    cout &lt;&lt; <span class="string">"请输入这"</span> &lt;&lt; n &lt;&lt; <span class="string">"种电脑各自的型号、单价、总数:(以空格分隔)"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 输入n个数据元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; L.elem[i].type &gt;&gt; L.elem[i].price &gt;&gt; L.elem[i].number;</span><br><span class="line">    <span class="comment">// 按照sort_way对刚创建的顺序表排序</span></span><br><span class="line">    <span class="keyword">switch</span> (sort_way) {</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="comment">// 按价格升序</span></span><br><span class="line">            <span class="built_in">sort</span>(L.elem, L.elem + n, cmp1);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="comment">// 按价格降序</span></span><br><span class="line">            <span class="built_in">sort</span>(L.elem, L.elem + n, cmp2);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="comment">// 按数量升序</span></span><br><span class="line">            <span class="built_in">sort</span>(L.elem, L.elem + n, cmp3);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="comment">// 按数量降序</span></span><br><span class="line">            <span class="built_in">sort</span>(L.elem, L.elem + n, cmp4);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 更新L的参数</span></span><br><span class="line">    L.sortWay = sort_way;</span><br><span class="line">    L.length = n;</span><br><span class="line">    L.isInit = <span class="literal">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>如果使用文件流创建仓库，那么代码略有不同，这部分属于C++的知识。</p><p>不同代码（输入n数据元素）如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string s;</span><br><span class="line"><span class="comment">// 从文件流输入n个数据元素</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">    ImportFile &gt;&gt; L.elem[i].type &gt;&gt; L.elem[i].price &gt;&gt; L.elem[i].number;</span><br><span class="line">    <span class="built_in">getline</span>(ImportFile, s);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="显示仓库"><a href="#显示仓库" class="headerlink" title="显示仓库"></a>显示仓库</h3><p>顾名思义，就是将仓库的数据打印出来。<br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 显示仓库</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintWarehouse</span><span class="params">(SqList L)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (!L.length)</span><br><span class="line">        cout &lt;&lt; <span class="string">"当前仓库没有数据!"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        cout &lt;&lt; <span class="string">"当前仓库数据如下:"</span> &lt;&lt; endl;</span><br><span class="line">        string sort_way;</span><br><span class="line">        <span class="keyword">switch</span> (L.sortWay) {</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                sort_way = <span class="string">"(按照价格升序)"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                sort_way = <span class="string">"(按照价格降序)"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                sort_way = <span class="string">"(按照数量升序)"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                sort_way = <span class="string">"(按照数量降序)"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; sort_way &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">"-------------------------------------------------------"</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; setLeft</span><br><span class="line">             &lt;&lt; <span class="built_in">setw</span>(<span class="number">5</span>) &lt;&lt; <span class="string">"序号"</span></span><br><span class="line">             &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">"型号"</span></span><br><span class="line">             &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; <span class="string">"单价"</span></span><br><span class="line">             &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; <span class="string">"数量"</span></span><br><span class="line">             &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">"-------------------------------------------------------"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++)</span><br><span class="line">            cout &lt;&lt; setLeft</span><br><span class="line">                 &lt;&lt; <span class="built_in">setw</span>(<span class="number">5</span>) &lt;&lt; i + <span class="number">1</span></span><br><span class="line">                 &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; L.elem[i].type</span><br><span class="line">                 &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; L.elem[i].price</span><br><span class="line">                 &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; L.elem[i].number</span><br><span class="line">                 &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">"-------------------------------------------------------"</span> &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="入库-1"><a href="#入库-1" class="headerlink" title="入库"></a>入库</h3><p>入库要考虑两种情况，第一种情况，仓库中已经有和待入库电脑相同型号的数据元素，那么需要先比较价格是否一致（不一致拒绝用户的入库操作），然后更改仓库中此种电脑数据元素的数量值。<br>第二种情况入库一种新型号的电脑，那么则要插入一个新的数据元素（<code>Computer</code>）到仓库中，并且在插入之前还要检查有序表的内存空间（<code>listsize</code>）是否充足，如果不足，则需要再分配有序表的内存大小，即为顺序表增加一个大小为存储<code>LISTINCREMENT</code>个数据元素的空间。然后，根据有序表的排序方式（<code>L.sortWay</code>），找到可以插入元素的地址。插入时，先将该地址及以后的地址全部后移一位，接着将当前地址写入要入库的数据元素。<br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">Enter</span><span class="params">(SqList &amp;L, <span class="type">const</span> Computer &amp;c)</span> </span>{</span><br><span class="line">    <span class="comment">// 寻找仓库中是否已经有和c.type同类型的电脑</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(c.type, L.elem[i].type) == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">if</span> (c.price == L.elem[i].price) {   <span class="comment">// 检查价格价格是否与c.price相等</span></span><br><span class="line">                L.elem[i].number += c.number;</span><br><span class="line">                <span class="keyword">return</span> OK;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                cout &lt;&lt; <span class="string">"提示:"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="built_in">showInfo</span>(L.elem[i]);</span><br><span class="line">                <span class="keyword">return</span> ERROR;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 入库一个新类型的电脑</span></span><br><span class="line">    <span class="keyword">if</span> (L.length &gt;= L.listsize) {   <span class="comment">// 顺序表占用空间不足</span></span><br><span class="line">        <span class="comment">// 申请新的基地址、内存空间</span></span><br><span class="line">        <span class="keyword">auto</span> *newbase = (ElemType *) <span class="built_in">realloc</span>(L.elem, (L.listsize + LISTINCREMENT) * <span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">        <span class="keyword">if</span> (!newbase)</span><br><span class="line">            <span class="keyword">return</span> OVERFLOW;</span><br><span class="line">        L.elem = newbase;   <span class="comment">// L的基地址更改为newbase</span></span><br><span class="line">        L.listsize += LISTINCREMENT;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 按照L.sort_way对插入到顺序表中</span></span><br><span class="line">    <span class="type">int</span> item{L.length}; <span class="comment">// 确定要插入的位序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) {</span><br><span class="line">        <span class="keyword">switch</span> (L.sortWay) {</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: {</span><br><span class="line">                <span class="keyword">if</span> (c.price &lt; L.elem[i].price) {</span><br><span class="line">                    item = i;</span><br><span class="line">                    <span class="keyword">goto</span> change_sq;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: {</span><br><span class="line">                <span class="keyword">if</span> (c.price &gt; L.elem[i].price) {</span><br><span class="line">                    item = i;</span><br><span class="line">                    <span class="keyword">goto</span> change_sq;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>: {</span><br><span class="line">                <span class="keyword">if</span> (c.number &lt; L.elem[i].number) {</span><br><span class="line">                    item = i;</span><br><span class="line">                    <span class="keyword">goto</span> change_sq;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>: {</span><br><span class="line">                <span class="keyword">if</span> (c.number &gt; L.elem[i].number) {</span><br><span class="line">                    item = i;</span><br><span class="line">                    <span class="keyword">goto</span> change_sq;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    change_sq:</span><br><span class="line">    ElemType *q = &amp;L.elem[item];</span><br><span class="line">    <span class="comment">// 将q及q以后的元素全部后移一位</span></span><br><span class="line">    <span class="keyword">for</span> (ElemType *p = L.elem + L.length - <span class="number">1</span>; p &gt;= q; p--)</span><br><span class="line">        *(p + <span class="number">1</span>) = *p;</span><br><span class="line">    <span class="comment">// 将新元素赋给q</span></span><br><span class="line">    *q = c;</span><br><span class="line">    L.length++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>要注意的是如果是入库一种新型号的电脑，完成操作后，应当将有序表的长度加1（<code>L.length++</code>）。</p><h3 id="出库-1"><a href="#出库-1" class="headerlink" title="出库"></a>出库</h3><p>出库要考虑以下几种情况：</p><ol><li>仓库中是否有待出库电脑的型号的相应数据元素，如果没有找到相应的电脑型号，则应当拒绝用户的出库操作；</li><li>仓库中现有库存数量是否充足，满足出库要求，如果库存数量小于待出库数量，则应当拒绝用户的出库操作；</li><li>如果库存数量大于待出库数量，那么只需更改相应数据元素的数量值；</li><li>如果库存数量恰好等于待出库数量，那么此时这种型号的电脑应从仓库中“剔除”。具体操作是，找到该数据元素的地址，将该地址及以后的地址全部前移一位。最后，更新L.length参数。</li></ol><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">Out</span><span class="params">(SqList &amp;L, <span class="type">const</span> <span class="type">char</span> *type, <span class="type">int</span> num)</span> </span>{</span><br><span class="line">    <span class="comment">// 确定要出库元素的位序</span></span><br><span class="line">    <span class="type">int</span> item{L.length + <span class="number">1</span>};</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(type, L.elem[i].type) == <span class="number">0</span>) {</span><br><span class="line">            item = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 没有找到要出库元素的位序，说明在仓库中没有元素，返回错误</span></span><br><span class="line">    <span class="keyword">if</span> (item &gt; L.length)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 确定要出库元素现有库存的数量是否可以出库</span></span><br><span class="line">    <span class="keyword">if</span> (num &lt; L.elem[item].number) {</span><br><span class="line">        <span class="comment">// 正常出库</span></span><br><span class="line">        L.elem[item].number -= num;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (num == L.elem[item].number) {</span><br><span class="line">        <span class="comment">// 全部出库</span></span><br><span class="line">        cout &lt;&lt; <span class="string">"提示:"</span> &lt;&lt; endl</span><br><span class="line">             &lt;&lt; L.elem[item].type &lt;&lt; <span class="string">"型号的电脑已全部出库!"</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将p及p以后的元素全部后移一位</span></span><br><span class="line">        <span class="keyword">for</span> (ElemType *p = &amp;L.elem[item + <span class="number">1</span>]; p &lt;= &amp;L.elem[L.length - <span class="number">1</span>]; p++) {</span><br><span class="line">            *(p - <span class="number">1</span>) = *p;</span><br><span class="line">        }</span><br><span class="line">        L.length--;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// 库存不足</span></span><br><span class="line">        cout &lt;&lt; <span class="string">"提示:"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">showInfo</span>(L.elem[item]);</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="查询电脑数据"><a href="#查询电脑数据" class="headerlink" title="查询电脑数据"></a>查询电脑数据</h3><p>查询电脑数据，只需从基地址开始遍历，直到找到数据元素的型号和待查询的型号相同，那么返回电脑信息。<br>可以定义一个<code>item</code>参数，初始值为<code>L.length + 1</code>，如果找到数据元素，则将其更新为数据元素的逻辑位序。如果遍历结束，item都未更新，说明未找到。因为数据元素的最大逻辑位序是有序表的表长（<code>L.length</code>），所以判断是否找到数据元素的条件是：<code>item &gt; L.length</code>。<br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">getInfo</span><span class="params">(SqList L, <span class="type">const</span> <span class="type">char</span> *type)</span> </span>{</span><br><span class="line">    <span class="comment">// 确定要查找的电脑的元素位序</span></span><br><span class="line">    <span class="type">int</span> item{L.length + <span class="number">1</span>};</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(type, L.elem[i].type) == <span class="number">0</span>) {</span><br><span class="line">            item = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (item &gt; L.length)</span><br><span class="line">        cout &lt;&lt; <span class="string">"没有找到"</span> &lt;&lt; type &lt;&lt; <span class="string">"型号的电脑"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        cout &lt;&lt; <span class="string">"信息如下:"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">showInfo</span>(L.elem[item]);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="盘点仓库"><a href="#盘点仓库" class="headerlink" title="盘点仓库"></a>盘点仓库</h3><p>从基地址开始遍历，求得关键数据：总台数（<code>numSum</code>）、总金额（<code>priceSum</code>）、最高价（<code>priceMax</code>）、最低价（<code>priceMin</code>）、平均价（<code>priceAverage</code>）。<br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Check</span><span class="params">(SqList L)</span> </span>{</span><br><span class="line">    <span class="type">int</span> numSum{<span class="number">0</span>};</span><br><span class="line">    <span class="type">double</span> priceSum{<span class="number">0.0</span>}, priceMax{L.elem[<span class="number">0</span>].price}, priceMin{L.elem[<span class="number">0</span>].price}, priceAverage{<span class="number">0.0</span>};</span><br><span class="line">    vector&lt;<span class="type">char</span> *&gt; priceMaxComputer;    <span class="comment">// 存储价格最高的电脑的类型名</span></span><br><span class="line">    vector&lt;<span class="type">char</span> *&gt; priceMinComputer;    <span class="comment">// 存储价格最低的电脑的类型名</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!L.length) {</span><br><span class="line">        cout &lt;&lt; <span class="string">"当前仓库没有数据!"</span> &lt;&lt; endl;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// 求总数、总金额、最高价、最低价</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) {</span><br><span class="line">            numSum += L.elem[i].number;</span><br><span class="line">            priceSum += L.elem[i].price * L.elem[i].number;</span><br><span class="line">            priceMax = <span class="built_in">max</span>(priceMax, L.elem[i].price);</span><br><span class="line">            priceMin = <span class="built_in">min</span>(priceMin, L.elem[i].price);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 记录价格最高、最低的电脑类型名</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) {</span><br><span class="line">            <span class="keyword">if</span> (L.elem[i].price == priceMax)</span><br><span class="line">                priceMaxComputer.<span class="built_in">push_back</span>(L.elem[i].type);</span><br><span class="line">            <span class="keyword">if</span> (L.elem[i].price == priceMin)</span><br><span class="line">                priceMinComputer.<span class="built_in">push_back</span>(L.elem[i].type);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 求平均价</span></span><br><span class="line">        priceAverage = priceSum / numSum;</span><br><span class="line">        <span class="comment">// 输出信息</span></span><br><span class="line">        cout &lt;&lt; <span class="string">"盘点数据如下"</span> &lt;&lt; endl</span><br><span class="line">             &lt;&lt; <span class="string">"电脑的总台数: "</span> &lt;&lt; numSum &lt;&lt; endl</span><br><span class="line">             &lt;&lt; <span class="string">"电脑的总金额: "</span> &lt;&lt; priceSum &lt;&lt; endl</span><br><span class="line">             &lt;&lt; <span class="string">"电脑的最高价: "</span> &lt;&lt; priceMax &lt;&lt; endl</span><br><span class="line">             &lt;&lt; <span class="string">"           + 对应的型号是: "</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span> &amp;c:priceMaxComputer)</span><br><span class="line">            cout &lt;&lt; c &lt;&lt; <span class="string">"\t"</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">"电脑的最低价: "</span> &lt;&lt; priceMin &lt;&lt; endl</span><br><span class="line">             &lt;&lt; <span class="string">"           + 对应的型号是: "</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span> &amp;c:priceMinComputer)</span><br><span class="line">            cout &lt;&lt; c &lt;&lt; <span class="string">"\t"</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">"电脑的平均价格: "</span> &lt;&lt; priceAverage &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>这里定义了两个<code>char*</code>向量（<code>priceMaxComputer</code>、<code>priceMinComputer</code>），用以存储价格最高的电脑的类型名、最低的电脑的类型名，因为可能若干种型号的电脑都是最高价或最低价，所以使用C++的向量数据结构比较合适。这样，可以显示出最高价、最低价相应的电脑类型名，对用户友好。</p><h3 id="重新对仓库排序"><a href="#重新对仓库排序" class="headerlink" title="重新对仓库排序"></a>重新对仓库排序</h3><p>只需按照给定的排序方式，对仓库进行快速排序，然后更改<code>L.sortWay</code>参数为相应值。<br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="string">"请输入要重新对仓库排序的主要方式"</span> &lt;&lt; endl</span><br><span class="line">     &lt;&lt; <span class="string">"1. 按价格升序 2. 按价格降序"</span> &lt;&lt; endl</span><br><span class="line">     &lt;&lt; <span class="string">"3. 按数量升序 4. 按数量降序"</span> &lt;&lt; endl</span><br><span class="line">     &lt;&lt; <span class="string">"选择1-4:"</span>;</span><br><span class="line"><span class="keyword">auto</span> select = <span class="built_in">input_number</span>(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">switch</span> (select) {</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">sort</span>(L.elem, L.elem + L.length, cmp1);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">sort</span>(L.elem, L.elem + L.length, cmp2);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">sort</span>(L.elem, L.elem + L.length, cmp3);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="built_in">sort</span>(L.elem, L.elem + L.length, cmp4);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">L.sortWay = select;</span><br><span class="line">cout &lt;&lt; <span class="string">"重新排序成功!"</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>其中，4种排序方式的代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// computer排序方式：按价格升序</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp1</span><span class="params">(<span class="type">const</span> Computer &amp;a, <span class="type">const</span> Computer &amp;b)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> a.price &lt; b.price;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// computer排序方式：按价格降序</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp2</span><span class="params">(<span class="type">const</span> Computer &amp;a, <span class="type">const</span> Computer &amp;b)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> a.price &gt; b.price;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// computer排序方式：按数量升序</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp3</span><span class="params">(<span class="type">const</span> Computer &amp;a, <span class="type">const</span> Computer &amp;b)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> a.number &lt; b.number;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// computer排序方式：按数量降序</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp4</span><span class="params">(<span class="type">const</span> Computer &amp;a, <span class="type">const</span> Computer &amp;b)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> a.number &gt; b.number;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="导出仓库数据到文件"><a href="#导出仓库数据到文件" class="headerlink" title="导出仓库数据到文件"></a>导出仓库数据到文件</h3><p>原理和显示仓库大同小异，只是多了文件流的操作。<br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">(SqList L, <span class="type">const</span> string &amp;filename)</span> </span>{</span><br><span class="line">    <span class="comment">// 定义输出文件流filename.txt</span></span><br><span class="line">    <span class="function">ofstream <span class="title">OutFile</span><span class="params">(filename + <span class="string">".txt"</span>)</span></span>;</span><br><span class="line">    <span class="comment">// 输出文件头，用于下次输入时识别文件</span></span><br><span class="line">    OutFile &lt;&lt; <span class="string">"Computer Warehouse Data"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (!L.length)</span><br><span class="line">        OutFile &lt;&lt; <span class="string">"no data"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        OutFile &lt;&lt; <span class="string">"The information is as follows:"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">switch</span> (L.sortWay) {</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                OutFile &lt;&lt; <span class="string">"Sort Way: 1 (Ascending by price)"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                OutFile &lt;&lt; <span class="string">"Sort Way: 2 (Descending by price)"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                OutFile &lt;&lt; <span class="string">"Sort Way: 3 (Ascending by number)"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                OutFile &lt;&lt; <span class="string">"Sort Way: 4 (Descending by number)"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        OutFile &lt;&lt; <span class="string">"Total Type: "</span> &lt;&lt; L.length &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出数据信息</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++)</span><br><span class="line">            OutFile &lt;&lt; L.elem[i].type &lt;&lt; <span class="string">" "</span></span><br><span class="line">                    &lt;&lt; L.elem[i].price &lt;&lt; <span class="string">" "</span></span><br><span class="line">                    &lt;&lt; L.elem[i].number</span><br><span class="line">                    &lt;&lt; endl;</span><br><span class="line">        <span class="comment">// 关闭文件</span></span><br><span class="line">        OutFile.<span class="built_in">close</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="调试与测试"><a href="#调试与测试" class="headerlink" title="调试与测试"></a>调试与测试</h2><p><strong>注意：本设计使用的编译器是G++ 8.1.0，在Windows平台上编译、运行成功。<br>编译命令为：“g++ main.cpp sqlist.cpp -o main”（不含引号）。</strong></p><h3 id="调试分析"><a href="#调试分析" class="headerlink" title="调试分析"></a>调试分析</h3><p>一、创建仓库<br>为方便用户操作，本程序可以导出仓库数据到文件，然后在下次操作时，可以用此文件做仓库的初始化。这是在考虑到程序的友好性后增加的功能。<br>无论是手动创建还是从文件导入，方法是大同小异的。<br>本模块时间复杂度：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.052ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4001 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1752,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(2050,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(2535,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(3012,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3612,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>（快速排序<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.052ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4001 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1752,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(2050,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(2535,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(3012,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3612,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>）<br>二、入库、出库、查询、盘点仓库<br>时间复杂度均为：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.844ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2141 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1752,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container><br>考虑到程序的友好性，对入库、出库、查询的拒绝操作均给出具体信息。比如，在出库时如果库存数量小于待出库数量，则先显示当前库存，然后提示库存数量不足。<br>三、其他<br>菜单和主函数设计中，由于经常需要检测输入数字是否在某一范围内，使得生成大量重复代码。于是，将这些代码设计成函数，增加了代码的可读性。并且考虑到，用户的误输入（非数字）会导致程序崩溃，设计了正则表达式匹配，检测用户输入。<br>函数代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 输入from至end范围内的数字</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">input_number</span><span class="params">(<span class="type">int</span> from, <span class="type">int</span> end)</span> </span>{</span><br><span class="line">    <span class="keyword">auto</span> select{<span class="number">0</span>};</span><br><span class="line">    string input;</span><br><span class="line">    <span class="function">regex <span class="title">r</span><span class="params">(<span class="string">"[0-9]*"</span>)</span></span>;  <span class="comment">// 正则表达式:数字0-9，可以出现多次</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">        cin &gt;&gt; input;</span><br><span class="line">        <span class="type">bool</span> isNumber = <span class="built_in">regex_match</span>(input,r);</span><br><span class="line">        <span class="keyword">if</span> (!isNumber)  <span class="comment">// 如果input和正则表达式匹配</span></span><br><span class="line">            cout &lt;&lt; <span class="string">"输入错误，请输入数字"</span> &lt;&lt; from &lt;&lt; <span class="string">"-"</span> &lt;&lt; end &lt;&lt; <span class="string">":"</span>;</span><br><span class="line">        <span class="keyword">else</span> {</span><br><span class="line">            select = <span class="built_in">atoi</span>(input.<span class="built_in">c_str</span>());</span><br><span class="line">            <span class="keyword">if</span> (select &lt; from || select &gt; end)</span><br><span class="line">                cout &lt;&lt; <span class="string">"输入错误，重新输入"</span> &lt;&lt; from &lt;&lt; <span class="string">"-"</span> &lt;&lt; end &lt;&lt; <span class="string">":"</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> select;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>另外一个是，如果用户在初始化仓库的情况下，进行入库、出库等操作，亦会导致程序崩溃。所以，后来在有序表中增加了一个参数<code>isInit</code>，用于指示当前有序表是否已经初始化。在每次操作之前，检测是否已经初始化，这样避免了这一类型的崩溃。</p><h3 id="用户手册"><a href="#用户手册" class="headerlink" title="用户手册"></a>用户手册</h3><p>启动本程序后，按照菜单的提示进行操作即可。</p><p>注意：</p><ol><li>第一步必须先初始化仓库，否则，您无法进行其他的操作，将返回“仓库还未初始化!”。</li><li>初始化仓库时，可以选择“2.从外部文件导入”，但前提是，该外部文件要存在，且是以前程序生成的导出合法文件。否则，不存在的文件将提示“没有文件/文件无法打开”，不是合法文件将提示“文件内容不符合要求”，这会导致初始化仓库失败。所以，请检查您输入的文件名和文件内容！</li><li>建议在入库操作之前先显示仓库，确保增加仓库中某一电脑型号的数量时，输入的价格和仓库中一致；</li><li>建议在出库操作之前先显示仓库，确保仓库中有您想要出库的电脑型号，以及其数量充足；</li><li>您可以选择菜单项“7.重新对仓库排序”，按照您喜爱的方式对仓库排序，本程序提供了四种主要排序方式：1-按照价格升序、2-按照价格降序、3-按照数量升序、4-按照数量降序</li><li>建议每次结束程序前，导出仓库数据到文件，这样可以保存仓库数据，方便下次操作。</li></ol><h3 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h3><p>本设计给出了一个输入文件info.txt<br>内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Computer Warehouse Data</span><br><span class="line">The information is as follows:</span><br><span class="line">Sort Way: 1 (Ascending by price)</span><br><span class="line">Total Type: 12</span><br><span class="line">RedmiBook-14 3299 30</span><br><span class="line">Dell-G5 5699 14</span><br><span class="line">Surface-Pro-7 5788 20</span><br><span class="line">Lenovo-Air14 5999 17</span><br><span class="line">Lenovo-R7000 6057 12</span><br><span class="line">Lenovo-Yoga14 6299 8</span><br><span class="line">Lenovo-Pro14 6299 10</span><br><span class="line">MiBook-Pro-15.6 6999 13</span><br><span class="line">Dell-G3 6999 15</span><br><span class="line">Dell-XPS13 8888 5</span><br><span class="line">MacBook-Pro-13 9199 5</span><br><span class="line">MacBook-Pro-16 17399 3</span><br></pre></td></tr></table></figure><p>下面是各种操作的输出结果（截图）：<br>1、菜单显示<br><img src="https://img-blog.csdnimg.cn/20201230130624751.png"><br>2、初始化仓库<br><img src="https://img-blog.csdnimg.cn/20201230130657360.png"><br>3、显示仓库<br><img src="https://img-blog.csdnimg.cn/20201230130710167.png"><br>4、入库<br>入库Dell-G5 5699 2：<br><img src="https://img-blog.csdnimg.cn/20201230130738804.png"><br>入库后显示仓库：<br><img src="https://img-blog.csdnimg.cn/20201230130831651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"><br>入库Huawei-MateBook-X 8999 2：<br><img src="https://img-blog.csdnimg.cn/20201230130908589.png"><br>入库后显示仓库：<br><img src="https://img-blog.csdnimg.cn/20201230130855122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"><br>5、出库<br>出库Huawei-MateBook-X 2:<br><img src="https://img-blog.csdnimg.cn/20201230130940342.png"><br>出库后显示仓库：<br><img src="https://img-blog.csdnimg.cn/20201230131001590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"><br>6、查询<br>查询Lenovo-Pro14<br><img src="https://img-blog.csdnimg.cn/20201230131032662.png"><br>7、盘点仓库<br><img src="https://img-blog.csdnimg.cn/20201230131107402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"><br>8、重新对仓库排序<br>按数量升序对仓库排序：<br><img src="https://img-blog.csdnimg.cn/20201230131131645.png"><br>显示重新排序后的仓库：<br><img src="https://img-blog.csdnimg.cn/20201230131144395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hzaW5nWWFuZw==,size_16,color_FFFFFF,t_70"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过本次课程设计，在数据结构课程中所学到的顺序表基础上，实现了有序表，并通过基本数据元素（<code>Computer</code>）和数据结构（<code>SqList</code>）的设计，实现了简易的仓库管理系统。<br>在本次课程设计中，也学习到很多的C++的知识，如STL中数据结构与算法的应用（<code>vector</code>、<code>sort</code>）、文件流（<code>fstream</code>）。<br>通过设计输入输出文件的功能，解决了以往繁琐的数据输入步骤。同时，也增加了程序的友好性。<br>通过输入检测、正则表达式匹配，解决了非法输入导致程序崩溃的问题。<br>但限于编程能力，本程序仍存在某些问题，如初始化时，没有对输入相同型号的数据做处理，这是程序的改进方向。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><div class="tag-plugin note"><div class="body"><p>[1] 严蔚敏，吴伟民.数据结构（C语言版）[M]. 北京：清华大学出版社，1997.</p><p>[2] 严薇敏，吴卫民.数据结构题集（C 语言版）[M].北京：清华大学出版社，1997.</p><p>[3] [美]Y.Danie Liang. C++程序设计.[M].北京：机械工业出版社，2015.</p><p>[4] Michael Wong，IBM XL编译器中国开发团队.深入理解C++11：C++11新特性解析与应用.[M].北京：机械工业出版社，2013.</p></div></div><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>源代码见<a href="https://github.com/icodexin/Course-Design/tree/main/Data%20Structure">Github仓库</a></p><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/icodexin/Course-Design/tree/main/Data%20Structure"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=icodexin&repo=Course-Design&theme=dark&show_owner=true"></a></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;课程设计选题：仓库管理系统&lt;/p&gt;</summary>
    
    
    
    <category term="课程设计" scheme="https://codexin.cn/categories/%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="数据结构" scheme="https://codexin.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="C++" scheme="https://codexin.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>2020全国大学生计算机技能应用大赛决赛C语言编程题摘录</title>
    <link href="https://codexin.cn/post/2020computer-skill-competition/"/>
    <id>https://codexin.cn/post/2020computer-skill-competition/</id>
    <published>2020-07-13T09:16:35.000Z</published>
    <updated>2023-03-19T13:11:22.198Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin note"><div class="body"><p>记录决赛两道编程题，比赛时由于时间紧张和经验不足，未有效完成。<br>现记录并完善。</p></div></div><span id="more"></span><h2 id="综合应用题"><a href="#综合应用题" class="headerlink" title="综合应用题"></a>综合应用题</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>2020年是特殊的一年，COVID-19 的传播给全世界都带来了极大的威胁。中国在疫情防治工作上有着突出表现，向社会、世界都做出了极大的贡献，让我们一同为祖国点赞。疫情防治工作，重在预防，各个地区都应当相互学习合适又优秀的防疫措施。如果能够依据现有的疫情数据分析出具有相似疫情情况的地区，那么对于挖掘疫情发展规律、分析疫情防控效能和落实疫情防治举措都会有积极的影响。现给出5个地区的当前疫情数据，请分析出疫情最相似的两个地区。具体要求如下:</p><ol><li><p>使用C语言程序设计实现;</p></li><li><p>为每个地区的疫情情况构建结构体，该结构体包括以下属性:<br>地区名、新增患者数、现有患者数、累积患者数、治愈患者数、死亡患者数。</p></li><li><p>相似程度算法如下:<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -4.118ex;" xmlns="http://www.w3.org/2000/svg" width="38.259ex" height="7.722ex" role="img" focusable="false" viewBox="0 -1592.9 16910.4 3412.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(814,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1692,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2081,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2653,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3097.7,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3587.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4254.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(5310.2,0)"><g data-mml-node="mrow" transform="translate(2965.3,803.3)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2453.3,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1510.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="msub" transform="translate(2010.4,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2827.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220,-1228.1)"><g data-mml-node="msqrt"><g transform="translate(1020,0)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2453.3,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,353.6) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(605,-293.8) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1397.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(0,58.1)"><path data-c="221A" d="M1001 1150Q1017 1150 1020 1132Q1020 1127 741 244L460 -643Q453 -650 436 -650H424Q423 -647 423 -645T421 -640T419 -631T415 -617T408 -594T399 -560T385 -512T367 -448T343 -364T312 -259L203 119L138 41L111 67L212 188L264 248L472 -474L983 1140Q988 1150 1001 1150Z"></path></g><rect width="4239.9" height="60" x="1020" y="1148.1"></rect></g><g data-mml-node="mo" transform="translate(5482.1,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="msqrt" transform="translate(5982.3,0)"><g transform="translate(1020,0)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2453.3,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msubsup" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,353.6) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(523,-293.8) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1315.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(0,58.1)"><path data-c="221A" d="M1001 1150Q1017 1150 1020 1132Q1020 1127 741 244L460 -643Q453 -650 436 -650H424Q423 -647 423 -645T421 -640T419 -631T415 -617T408 -594T399 -560T385 -512T367 -448T343 -364T312 -259L203 119L138 41L111 67L212 188L264 248L472 -474L983 1140Q988 1150 1001 1150Z"></path></g><rect width="4157.9" height="60" x="1020" y="1148.1"></rect></g></g><rect width="11360.2" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><p>其中，i 指的是 x 和 y 对象的第 i 维特征。sim越大，则两个对象越相似。</p></li><li><p>现有的5个地区的当前疫情数据是:</p><table><thead><tr><th>序号</th><th>地区名</th><th>新增患者数</th><th>现有患者数</th><th>累积患者数</th><th>治愈患者数</th><th>死亡患者数</th></tr></thead><tbody><tr><td>1</td><td>cityA</td><td>3</td><td>3</td><td>582</td><td>573</td><td>6</td></tr><tr><td>2</td><td>cityB</td><td>4</td><td>3</td><td>238</td><td>234</td><td>1</td></tr><tr><td>3</td><td>cityC</td><td>5</td><td>3</td><td>197</td><td>191</td><td>3</td></tr><tr><td>4</td><td>cityD</td><td>3</td><td>2</td><td>692</td><td>683</td><td>7</td></tr><tr><td>5</td><td>cityE</td><td>6</td><td>2</td><td>171</td><td>163</td><td>6</td></tr></tbody></table></li><li><p>要求提供数据输入功能。</p><p>要求输出部分必须有最相似的两个地区的名字。</p><p>输入输出样例：</p></li></ol><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn@0.1.1.8/post/2020/07/13/carbon.png" style="zoom:50%;"><p style="text-align: right;">（有改编）</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">City</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="type">char</span> name[<span class="number">50</span>];</span><br><span class="line"><span class="type">int</span> add;</span><br><span class="line"><span class="type">int</span> exist;</span><br><span class="line"><span class="type">int</span> count;</span><br><span class="line"><span class="type">int</span> cure;</span><br><span class="line"><span class="type">int</span> die;</span><br><span class="line">} City;</span><br><span class="line"><span class="comment">// 定义_similarity结构体用于存最大的相似值</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">similarity</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="type">char</span> name1[<span class="number">50</span>];</span><br><span class="line"><span class="type">char</span> name2[<span class="number">50</span>];</span><br><span class="line"><span class="type">double</span> sim_number;</span><br><span class="line">} similarity;</span><br><span class="line"><span class="comment">// 根据公式求相似值</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">sim</span><span class="params">(City x, City y)</span></span><br><span class="line">{</span><br><span class="line"><span class="type">int</span> sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>, sum3 = <span class="number">0</span>;</span><br><span class="line">sum1 = x.add * y.add + x.exist * y.exist + x.count * y.count + x.cure * y.cure + x.die * y.die;</span><br><span class="line">sum2 = x.add * x.add + x.exist * x.exist + x.count * x.count + x.cure * x.cure + x.die * x.die;</span><br><span class="line">sum3 = y.add * y.add + y.exist * y.exist + y.count * y.count + y.cure * y.cure + y.die * y.die;</span><br><span class="line"><span class="keyword">return</span> sum1 / <span class="built_in">sqrt</span>(sum2) / <span class="built_in">sqrt</span>(sum3);</span><br><span class="line">}</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">{</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pleas input the number of cities:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">City city[n];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nPleas input the information of %d cities:\n"</span>, n);</span><br><span class="line">    <span class="comment">//输入各个结构体</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO.%d city:\n"</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\tCity name:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, city[i].name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\tNumber of new patients:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;city[i].add);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\tNumber of existing patients:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;city[i].exist);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\tCumulative number of patients:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;city[i].count);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\tNumber of patients cured:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;city[i].cure);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\tNumber of patients died:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;city[i].die);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line">    <span class="comment">//先将最相似定义为第一个city和第二个city</span></span><br><span class="line">similarity most_like;</span><br><span class="line"><span class="built_in">strcpy</span>(most_like.name1, city[<span class="number">0</span>].name);</span><br><span class="line"><span class="built_in">strcpy</span>(most_like.name2, city[<span class="number">1</span>].name);</span><br><span class="line">most_like.sim_number = sim(city[<span class="number">0</span>], city[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-------------------------------------------------------------------\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The results of the analysis between each two cities are as follows:\n"</span>);</span><br><span class="line">    <span class="comment">//分析每两个之间的相似值，并记录相似值最大的那两个</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The similarity of epidemic situation between %s and %s: %.6f\n"</span>, city[i].name, city[j].name, sim(city[i], city[j]));</span><br><span class="line"><span class="keyword">if</span> (most_like.sim_number &lt; sim(city[i], city[j]))</span><br><span class="line">{</span><br><span class="line"><span class="built_in">strcpy</span>(most_like.name1, city[i].name);</span><br><span class="line"><span class="built_in">strcpy</span>(most_like.name2, city[j].name);</span><br><span class="line">most_like.sim_number = sim(city[i], city[j]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s and %s are the most similar!"</span>, most_like.name1, most_like.name2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="程序设计题"><a href="#程序设计题" class="headerlink" title="程序设计题"></a>程序设计题</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>实现一个矩阵左右循环移动的小程序。用户通过输入数据，程序作出相应动作。规定：函数fun1的功能是向左移动，函数fun2的功能是向右移动，当用户输入q时，结束程序。在给出代码框架中，可以决定是否使用全局变量r。</p><p>参考输入输出：</p><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn@0.1.1.8/post/2020/07/13/carbon1.png" style="zoom:50%;"><p>要求：</p><ol><li>不改变已给出的代码；</li><li>补充fun1和fun2函数；</li><li>补充main()函数两个注释之间的代码：要求在此补充菜单式的控制流程，要求能够实现对上次变化后的矩阵进行循环横向转移(可设置转移方向和转移步数)；</li><li>关于方向，规定：输入1，代表向左转移；输入2，代表向右转移；</li><li>关于步数，规定：输入值为大于等于1的正整数。</li></ol><p>代码框架：</p><figure class="highlight c"><figcaption><span>代码框架</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 4</span></span><br><span class="line"><span class="type">int</span> r[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">fun1</span><span class="params">(<span class="type">int</span> (*a)[N], <span class="type">int</span> x)</span>{</span><br><span class="line">    <span class="comment">/* 控制向左移动 */</span></span><br><span class="line">}</span><br><span class="line"><span class="type">void</span> <span class="title function_">fun2</span><span class="params">(<span class="type">int</span> (*a)[N], <span class="type">int</span> x)</span>{</span><br><span class="line">    <span class="comment">/* 控制向右移动 */</span></span><br><span class="line">}</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> t[][N]={<span class="number">25</span>,<span class="number">33</span>,<span class="number">14</span>,<span class="number">28</span>,<span class="number">19</span>,<span class="number">42</span>,<span class="number">57</span>,<span class="number">48</span>,<span class="number">39</span>,<span class="number">53</span>,<span class="number">39</span>,<span class="number">34</span>,<span class="number">27</span>,<span class="number">40</span>,<span class="number">77</span>,<span class="number">61</span>},i,j,m,p;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"原始矩阵:\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;N; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,t[i][j]);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 在下面写出菜单式控制流程代码</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在上面写出菜单时控制流程代码</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p style="text-align: right;">（有改编）</p><h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><p>我觉得思考清晰了就没什么难度，想清楚如何循环，每个循环的作用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 4</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fun1</span><span class="params">(<span class="type">int</span> (*a)[N], <span class="type">int</span> x)</span></span><br><span class="line">{</span><br><span class="line"><span class="type">char</span> temp;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) <span class="comment">// 第 0 ~ N 行</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; x; k++) <span class="comment">// 每一行移动 x 次</span></span><br><span class="line">{</span><br><span class="line">temp = a[i][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; N; j++) <span class="comment">//每一次的移动过程</span></span><br><span class="line">{</span><br><span class="line">a[i][j - <span class="number">1</span>] = a[i][j];</span><br><span class="line">}</span><br><span class="line">a[i][N - <span class="number">1</span>] = temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="type">void</span> <span class="title function_">fun2</span><span class="params">(<span class="type">int</span> (*a)[N], <span class="type">int</span> x)</span></span><br><span class="line">{</span><br><span class="line"><span class="type">char</span> temp;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) <span class="comment">// 第 0 ~ N 行</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; x; k++) <span class="comment">// 每一行移动 x 次</span></span><br><span class="line">{</span><br><span class="line">temp = a[i][N - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = N; j &gt; <span class="number">0</span>; j--) <span class="comment">//每一次的移动过程</span></span><br><span class="line">{</span><br><span class="line">a[i][j] = a[i][j - <span class="number">1</span>];</span><br><span class="line">}</span><br><span class="line">a[i][<span class="number">0</span>] = temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">{</span><br><span class="line"><span class="type">int</span> t[][N] = {{<span class="number">25</span>, <span class="number">33</span>, <span class="number">14</span>, <span class="number">28</span>}, {<span class="number">19</span>, <span class="number">42</span>, <span class="number">57</span>, <span class="number">48</span>}, {<span class="number">39</span>, <span class="number">53</span>, <span class="number">39</span>, <span class="number">34</span>}, {<span class="number">27</span>, <span class="number">40</span>, <span class="number">77</span>, <span class="number">61</span>}}, i, j, m, p;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"原始矩阵:\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, t[i][j]);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\n输入移动的方向[向左1,向右2]:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入移动的步数:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p);</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">fun1(t, p);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">fun2(t, p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\n移动后的矩阵:\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, t[i][j]);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"退出请按q键，继续请按任意键后回车"</span>);</span><br><span class="line">getchar();</span><br><span class="line">ch = getchar();</span><br><span class="line">} <span class="keyword">while</span> (ch != <span class="string">'q'</span> &amp;&amp; ch != <span class="string">'Q'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;tag-plugin note&quot;&gt;&lt;div class=&quot;body&quot;&gt;&lt;p&gt;记录决赛两道编程题，比赛时由于时间紧张和经验不足，未有效完成。&lt;br&gt;现记录并完善。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://codexin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="C语言" scheme="https://codexin.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="算法" scheme="https://codexin.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>安装Ubuntu 20.04实战教程</title>
    <link href="https://codexin.cn/post/install-ubuntu-20-04/"/>
    <id>https://codexin.cn/post/install-ubuntu-20-04/</id>
    <published>2020-06-26T16:00:00.000Z</published>
    <updated>2023-03-19T13:11:22.198Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin note" ><div class="body"><p>本文仅适用于UEFI+GPT类型的PC，有关这方面的知识请自行了解。</p></div></div><span id="more"></span><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><h3 id="为什么需要使用-Linux-系统？"><a href="#为什么需要使用-Linux-系统？" class="headerlink" title="为什么需要使用 Linux 系统？"></a>为什么需要使用 Linux 系统？</h3><p>既已看到此文，我相信你一定有需求来使用Linux系统了。</p><div class="tag-plugin note" ><div class="body"><p>Linux是服务器首选操作系统</p></div></div><div class="tag-plugin folders" ><details class="folder" index="0"><summary><span>稳定、高效</span></summary><div class="body"><p>Linux系统相对Windows系统稳定并且高效，服务器要求长时间运行不关机，显然Windows系统不适和使用在服务器上。<br>并且Linux系统更改大多数配置都无需重启服务器即可生效，这也确保了 Linux 服务器最短的停机时间。</p></div></details><details class="folder" index="1"><summary><span>开源</span></summary><div class="body"><p>Linux系统是开源的，你可以对系统进行自定义，以满足使用要求，这是Windows无法比拟的。</p></div></details><details class="folder" index="2"><summary><span>性能良好</span></summary><div class="body"><p>服务器端Linux可自由配置GUI界面或者仅使用<strong>终端</strong>进行管理，保证其对硬件配置需求低。</p></div></details></div><div class="tag-plugin note" ><div class="body"><p>而作为程序员的你，如果要做在服务器上进行开发，就必须要学会使用Linux！<br>我认为，如果仅做开发，Linux系统实在太自由、舒服了！<br>在终端里演绎出自己的世界，一行一行命令即可掌控全局！<br>​也不再有国内生态下Windows满天飞的广告了！</p></div></div><h3 id="为什么选择Ubuntu？"><a href="#为什么选择Ubuntu？" class="headerlink" title="为什么选择Ubuntu？"></a>为什么选择Ubuntu？</h3><p>这个嘛，因为Ubuntu对新手太友好了！而且，Ubuntu对桌面系统支持特别好。同时，使用Ubuntu的人也非常多。</p><h2 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h2><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><ol><li>已经安装好Windows10的一台PC</li></ol></div><div class="body fs14"><p>官方推荐配置：</p><div class="tag-plugin checkbox" color="red"><input type="checkbox" checked="true"/><span>2&nbsp;GHz&nbsp;双核处理器或更快的处理器</span></div><div class="tag-plugin checkbox" color="blue"><input type="checkbox" checked="true"/><span>4&nbsp;GB&nbsp;系统内存</span></div><div class="tag-plugin checkbox" color="green"><input type="checkbox" checked="true"/><span>25&nbsp;GB&的可用硬盘空间</span></div><p>本文PC平台：</p><table><thead><tr><th>项目</th><th>配置</th></tr></thead><tbody><tr><td>品牌型号</td><td>Lenovo Xiaoxin Pro-13 IML 2019</td></tr><tr><td>CPU</td><td>Intel Core i7-10710U</td></tr><tr><td>RAM</td><td>16 GB</td></tr><tr><td>SSD</td><td>512GB</td></tr><tr><td>GPU</td><td>NVIDIA Geforce MX250</td></tr><tr><td>已安装Win10版本</td><td>Windows 10 Pro 1909 18363.900</td></tr></tbody></table><p>本文安装教程仅在此平台测试过，其他PC平台请自行参考</p></div></div><div class="timenode" index="1"><div class="header"><ol start="2"><li>Ubuntu 20.04 镜像文件</li></ol></div><div class="body fs14"><p>从<a href="https://ubuntu.com/download/desktop">Ubuntu官网</a>下载Ubuntu 20.04 LTS 镜像文件。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/01.png" alt="点击 download 按钮下载Ubuntu 20.04 LTS 镜像文件"/></div><div class="image-meta"><span class="image-caption center">点击 download 按钮下载Ubuntu 20.04 LTS 镜像文件</span></div></div><p>点击下载按钮后可能会出现捐助页面，你可以根据个人情况进行捐助。<br>如果你觉得下载速度慢，你可以使用某些下载器（如迅雷、Motrix）进行下载。</p></div></div><div class="timenode" index="2"><div class="header"><ol start="3"><li>一个空间大于4GB的U盘</li></ol></div><div class="body fs14"><p>请在安装前，确保U盘内所有内容都已备份！U盘将用于制作Ubuntu安装盘。<br>另外，推荐使用USB3.0以上的U盘（PC也要有USB3.0端口），安装时间更快。</p></div></div><div class="timenode" index="3"><div class="header"><ol start="4"><li>一款USB启动盘制作软件</li></ol></div><div class="body fs14"><p>常见的工具软件是UltralSO，不过此处我推荐使用<a href="http://rufus.ie/">Rufus</a>，使用它安装系统更为简洁、明了。<br>并且Ubuntu官网也推荐使用Rufus进行安装。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/03.png" alt="点击 Rufus 3.11 进行下载"/></div><div class="image-meta"><span class="image-caption center">点击 Rufus 3.11 进行下载</span></div></div></div></div><div class="timenode" index="4"><div class="header"><ol start="5"><li>检查电脑BIOS模式</li></ol></div><div class="body fs14"><p>使用<kbd>Win</kbd>+<kbd>R</kbd>打开运行窗口，输入<code>msinfo32</code>后回车，出现以下界面，可查看BIOS模式：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/02.png" alt="BIOS模式" style="width:50%;"/></div><div class="image-meta"><span class="image-caption center">BIOS模式</span></div></div>   <p>可见，本文BIOS模式为UEFI，如果你显示为“传统”字样，那么本教程可能不适用你的电脑。</p><p>BIOS模式有传统的MBR模式和新式UEFI模式，这将对安装双系统的方法产生直接影响。目前来看，大部分电脑都属于新式UEFI模式，不过也存在一些老机子仍然属于传统MBR模式。本教程只介绍新式UEFI模式下的双系统安装方法，如果你的电脑属于传统MBR模式，强烈建议你重装Windows系统来更新BIOS模式到UEFI。</p></div></div></div><h2 id="STEP1-制作U盘启动安装盘"><a href="#STEP1-制作U盘启动安装盘" class="headerlink" title="STEP1 制作U盘启动安装盘"></a>STEP1 制作U盘启动安装盘</h2><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><ol><li>打开Rufus软件，选择U盘设备</li></ol></div><div class="body fs14"><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/04.png" alt="此时请确保设备下拉框选中的是你的U盘" style="width:50%;"/></div><div class="image-meta"><span class="image-caption center">此时请确保设备下拉框选中的是你的U盘</span></div></div></div></div><div class="timenode" index="1"><div class="header"><ol start="2"><li>加载引导镜像</li></ol></div><div class="body fs14"><p>点击<kbd>选择</kbd>按钮，这将打开一个文件选择窗口，请选择之前下载好的Ubuntu 20.04 LTS 镜像（本教程下载后的镜像名为Ubuntu-20.04-desktop-amd64.iso）</p></div></div><div class="timenode" index="2"><div class="header"><ol start="3"><li>选择分区类型</li></ol></div><div class="body fs14"><p>前文已经提到，本机BIOS采用的是UEFI，所以将分区类型选择为GPT模式。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/05.png" alt="选择分区类型" style="width:50%;"/></div><div class="image-meta"><span class="image-caption center">选择分区类型</span></div></div></div></div><div class="timenode" index="3"><div class="header"><ol start="4"><li>写入镜像</li></ol></div><div class="body fs14"><p><strong>在进行此操作前，请确保U盘文件已备份。</strong></p><p>点击开始按钮，将进行写入操作。<br>同时，可能会提示“检测到ISOHybrid镜像”，请选择默认选项，并点击OK。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/06.png" alt="检测到ISOHybrid镜像" style="width:50%;"/></div><div class="image-meta"><span class="image-caption center">检测到ISOHybrid镜像</span></div></div><p>之后，还会弹出警告窗口，请确保已备份U盘文件，然后点击确定，这将开始操作。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/07.png" style="width:50%;"/></div></div><p>使用USB3.0的U盘，大约在3分钟后完成写入操作。<br>完成后，可以关闭软件。</p></div></div></div><h2 id="STEP2-分配用于Ubuntu的空间大小"><a href="#STEP2-分配用于Ubuntu的空间大小" class="headerlink" title="STEP2 分配用于Ubuntu的空间大小"></a>STEP2 分配用于Ubuntu的空间大小</h2><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><ol><li>启动磁盘管理</li></ol></div><div class="body fs14"><p>右键左下角Windows图标，选择“磁盘管理”选项。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/08.png" style="width:50%;"/></div></div></div></div><div class="timenode" index="1"><div class="header"><ol start="2"><li>分配空间</li></ol></div><div class="body fs14"><p>在PC磁盘（<strong>非U盘</strong>）末尾（也就是<strong>最后一个盘</strong>）分配一个合适大小的空间，用于Ubuntu的使用。<br>（如果你的PC是双硬盘，本文可能不适用）</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/09.png"/></div></div>右键最后一个盘(此处为E盘)，点击压缩卷，以压缩出Ubuntu的空间。<div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/10.png" style="width:50%;"/></div></div>输入压缩空间量，<b>注意单位是MB</b>，此处我选择了80GB(即80*1024=81920MB)，然后点击压缩。    <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/11.png" style="width:50%;"/></div></div>最终，盘末压缩出了80GB未分配的空间，这将用于Ubuntu。<p><u>现在，准备工作已经完成了一大半，请关闭计算机，进入下一步骤</u></p></div></div></div><h2 id="STEP3-安装前的BIOS设置"><a href="#STEP3-安装前的BIOS设置" class="headerlink" title="STEP3 安装前的BIOS设置"></a>STEP3 安装前的BIOS设置</h2><p>进入BIOS设置界面，具体品牌有具体的方法，请自行查找。(本机为开机按F2键)</p><p>以下BIOS界面所示为联想小新PRO 13 英特尔版。</p><ol><li>设置UEFI固件选项<div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/12.png" alt="开机按F2键，进入BIOS设置界面，点击<b>Boot Setup</b>" style="width:50%;"/></div><div class="image-meta"><span class="image-caption center">开机按F2键，进入BIOS设置界面，点击<b>Boot Setup</b></span></div></div></li></ol><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/13.jpg" alt="切换到<b>Security</b>选项卡，将<b>Secure Boot</b>值改为<b>Disabled</b>" style="width:80%;"/></div><div class="image-meta"><span class="image-caption center">切换到<b>Security</b>选项卡，将<b>Secure Boot</b>值改为<b>Disabled</b></span></div></div><div class="tag-plugin note" ><div class="body"><p>此步骤旨在关闭安全启动。有关安装Linux系统和关闭安全启动的原因请自行了解。</p></div></div><ol start="2"><li>退出BIOS设置界面，<strong>保存设置</strong>，并关机</li></ol><h2 id="STEP4-安装Ubuntu-20-02-LTS"><a href="#STEP4-安装Ubuntu-20-02-LTS" class="headerlink" title="STEP4 安装Ubuntu 20.02 LTS"></a>STEP4 安装Ubuntu 20.02 LTS</h2><h3 id="1-插入U盘，进入U盘启动界面"><a href="#1-插入U盘，进入U盘启动界面" class="headerlink" title="1. 插入U盘，进入U盘启动界面"></a>1. 插入U盘，进入U盘启动界面</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/14.jpg" alt="开机按F2键，进入启动项选择界面，点击<b>Boot Menu</b>" style="width:50%;"/></div><div class="image-meta"><span class="image-caption center">开机按F2键，进入启动项选择界面，点击<b>Boot Menu</b></span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/15.jpg" alt="选择U盘启动项，例如这里：Linpus lite" style="width:50%;"/></div><div class="image-meta"><span class="image-caption center">选择U盘启动项，例如这里：Linpus lite</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/16.jpg" alt="在左上角，选择Ubuntu项，回车" style="width:50%;"/></div><div class="image-meta"><span class="image-caption center">在左上角，选择Ubuntu项，回车</span></div></div><p>等待数秒后，即可开始安装</p><h3 id="2-开始安装"><a href="#2-开始安装" class="headerlink" title="2. 开始安装"></a>2. 开始安装</h3><div class="tag-plugin tabs" align="center"id="tab_1"><div class="nav-tabs"><div class="tab active"><a href="#tab_1-1">欢迎页</a></div><div class="tab"><a href="#tab_1-2">键盘布局</a></div><div class="tab"><a href="#tab_1-3">更新和其他软件</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_1-1"><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/17.jpg" style="width:80%;"/></div></div></div><div class="tab-pane" id="tab_1-2"><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/18.jpg" style="width:80%;"/></div></div></div><div class="tab-pane" id="tab_1-3"><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/19.jpg" alt="根据需要选择安装" style="width:80%;"/></div><div class="image-meta"><span class="image-caption center">根据需要选择安装</span></div></div></div></div></div><h3 id="3-为Ubuntu进行合理系统分区"><a href="#3-为Ubuntu进行合理系统分区" class="headerlink" title="3. 为Ubuntu进行合理系统分区"></a>3. 为Ubuntu进行合理系统分区</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/20.jpg" alt="<b>安装类型务请必选择其他选项</b>，否则Windows系统可能将不复存在" style="width:80%;"/></div><div class="image-meta"><span class="image-caption center"><b>安装类型务请必选择其他选项</b>，否则Windows系统可能将不复存在</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/21.jpg" style="width:80%;"/></div></div><div class="tag-plugin note" color="warning"><div class="body"><p><strong>接下来，将进行分区操作，请谨慎小心，一旦出错，后果可能出乎意料！</strong></p></div></div><p>有关Linux系统的目录结构与Windows的区别，请自行了解相关知识。</p><p>为Ubuntu分区有很多种方式，这里只介绍我操作的。</p><p>我的分区方案是：</p><table><thead><tr><th>挂载点</th><th>分区用于</th><th>分区类型</th><th>分区位置</th><th>大小</th></tr></thead><tbody><tr><td></td><td>EFI系统分区</td><td>逻辑分区</td><td>空间起始位置</td><td>128MB - 512MB，推荐直接512MB</td></tr><tr><td></td><td>Swap交换空间</td><td>逻辑分区</td><td>空间起始位置</td><td>视具体情况而定，见下文</td></tr><tr><td>&#x2F;</td><td>Ext4日志文件系统</td><td>主分区</td><td>空间起始位置</td><td>可分配空间的30%</td></tr><tr><td>&#x2F;home</td><td>Ext4日志文件系统</td><td>逻辑分区</td><td>空间起始位置</td><td>剩余未分配空间</td></tr></tbody></table><hr><p>下面开始具体操作(每次操作都对上图所示<strong>橙色的空闲未分配区域</strong>）：</p><u>请一定按照顺序进行。</u><h4 id="1-EFI系统分区"><a href="#1-EFI系统分区" class="headerlink" title="1. EFI系统分区"></a>1. EFI系统分区</h4><div class="tag-plugin note" ><div class="body"><p>EFI，全称“Extensible Firmware Interface”，即可扩展固件接口，用于操作系统启动前，完成硬件初始化，并引导进入操作系统。现在，绝大多数个人PC都使用EFI升级版本——UEFI。<br>点击左下角“+”号，弹出创建分区界面</p></div></div><div class="tag-plugin grid" ><div class="cell" index="0"><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/22.jpg"/></div></div></div><div class="cell" index="1"><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/23.jpg"/></div></div></div></div><p>将大小改为<strong>512MB</strong>(推荐值)，分区类型改为<strong>逻辑分区</strong>，分区位置设置为<strong>空间起始位置</strong>，用于选择<strong>EFI系统分区</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/%E5%9C%A8Win10-PC%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu-20-04-%E7%B3%BB%E7%BB%9F/24.jpg"></p><p>点击OK后，<strong>请记下此时创建好的efi分区所在的设备号</strong>，如本次安装在&#x2F;dev&#x2F;nvme0n1p7 (不是Windows所在的efi分区，请看清楚)</p><h4 id="2-Swap交换分区"><a href="#2-Swap交换分区" class="headerlink" title="2. Swap交换分区"></a>2. Swap交换分区</h4><div class="tag-plugin note" ><div class="body"><p>Swap分区在系统的物理内存不够用的时候，把硬盘内存中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到Swap分区中，等到那些程序要运行时，再从Swap分区中恢复保存的数据到内存中。通俗来讲，Swap空间相当于Windows中的虚拟内存。</p></div></div><p>分配Swap分区大小视情况而定：</p><table><thead><tr><th align="center">RAM 物理内存</th><th align="center">推荐 Swap 分区大小</th><th align="center">需要休眠功能下建议的交换空间大小</th></tr></thead><tbody><tr><td align="center">≤ 2GB</td><td align="center">2倍于RAM大小</td><td align="center">3倍于RAM大小</td></tr><tr><td align="center">&gt; 2GB</td><td align="center">和RAM相同</td><td align="center">2倍于RAM大小</td></tr><tr><td align="center">&gt; 8GB - 64GB</td><td align="center">至少4GB</td><td align="center">1.5倍于RAM大小</td></tr><tr><td align="center">&gt; 64GB</td><td align="center">至少4GB</td><td align="center">不建议休眠</td></tr></tbody></table><p>对本机(机带RAM 16GB)以及分配给Ubuntu的大小(80GB)，综合考虑，Swap分区设置为8GB(8192MB)。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/25.jpg" style="width:50%;"/></div></div><h4 id="3-根目录-x2F"><a href="#3-根目录-x2F" class="headerlink" title="3. 根目录 (&#x2F;)"></a>3. 根目录 (&#x2F;)</h4><p>Linux的文件系统是采用级层式的树状目录结构，在此结构中最上层是根目录“&#x2F;”，然后在此目录下再创建其它的目录。</p><p>在Linux世界里，一切接文件，下图可清晰理解:<br><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/%E5%9C%A8Win10-PC%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu-20-04-%E7%B3%BB%E7%BB%9F/mermaid.png"><br>根目录设置为可分配空间(此处为80GB)的30%，即大约25GB(25600MB)。</p><h4 id="4-家目录-x2F-home"><a href="#4-家目录-x2F-home" class="headerlink" title="4. 家目录 (&#x2F;home)"></a>4. 家目录 (&#x2F;home)</h4><div class="tag-plugin note" ><div class="body"><p>存放所有用户文件的根目录，是用户主目录的基点，比如用户user的主目录就是&#x2F;home&#x2F;user，可以用<code>~</code>表示</p></div></div><p>应此分区存放内容较多，应将其设置尽可能大，而之前已经分配完该分配的空间了，这里只需将剩余的空间全部给 &#x2F;home 分区即可，这就是为什么 &#x2F;home 分区放在最后设置。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/26.jpg" style="width:50%;"/></div></div><h3 id="4-执行安装"><a href="#4-执行安装" class="headerlink" title="4. 执行安装"></a>4. 执行安装</h3><u>注意：分区结束后请勿立即开始安装！</u><p><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/%E5%9C%A8Win10-PC%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu-20-04-%E7%B3%BB%E7%BB%9F/27.png"></p><p><strong>请确保安装启动引导器的设备为设置EFI系统分区时的设备号！</strong>(&#x2F;dev&#x2F;nvme0n1p7)</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/28.jpg" style="width:50%;"/></div></div><p>现在，一切就绪，点击<kbd>现在安装(I)</kbd>，如遇提示，请点击<kbd>继续</kbd>后，执行安装</p><div class="tag-plugin gallery swiper" id="swiper-api" width="max" effect="coverflow"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/%E5%9C%A8Win10-PC%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu-20-04-%E7%B3%BB%E7%BB%9F/29.jpg"></div><div class="swiper-slide"><img no-lazy src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/%E5%9C%A8Win10-PC%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu-20-04-%E7%B3%BB%E7%BB%9F/30.jpg"></div><div class="swiper-slide"><img no-lazy src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/%E5%9C%A8Win10-PC%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu-20-04-%E7%B3%BB%E7%BB%9F/31.jpg"></div><div class="swiper-slide"><img no-lazy src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/%E5%9C%A8Win10-PC%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu-20-04-%E7%B3%BB%E7%BB%9F/32.jpg"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><p>执行系列操作后，重新启动PC</p><h2 id="STEP5-进入Ubuntu系统"><a href="#STEP5-进入Ubuntu系统" class="headerlink" title="STEP5 进入Ubuntu系统"></a>STEP5 进入Ubuntu系统</h2><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><p>重启后，提示移除安装介质，请将U盘拔出后，键入回车</p></div><div class="body fs14"><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/33.jpg" style="width:50%;"/></div></div></div></div><div class="timenode" index="1"><div class="header"><p>若没有手动选择启动项，几秒钟后将自动进入Ubuntu</p></div><div class="body fs14"><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/34.jpg" style="width:50%;"/></div></div></div></div><div class="timenode" index="2"><div class="header"><p>现在，你可以开始体验Ubuntu 20.04了！</p></div><div class="body fs14"><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/DianDengJun/cdn/post/2020/06/27/在Win10-PC上安装Ubuntu-20-04-系统/35.jpg" style="width:50%;"/></div></div></div></div></div><div class="tag-plugin note" color="red"><div class="body"><p>感谢你阅读到此，希望本文对你有所帮助，如有问题，请在主页里用<a href="mailto:yangxin@codexin.cn">邮件</a>方式联系我！</p></div></div>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;tag-plugin note&quot; &gt;&lt;div class=&quot;body&quot;&gt;&lt;p&gt;本文仅适用于UEFI+GPT类型的PC，有关这方面的知识请自行了解。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary>
    
    
    
    <category term="解决方案" scheme="https://codexin.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    <category term="Linux" scheme="https://codexin.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/Linux/"/>
    
    
    <category term="Ubuntu" scheme="https://codexin.cn/tags/Ubuntu/"/>
    
    <category term="Linux" scheme="https://codexin.cn/tags/Linux/"/>
    
    <category term="操作系统" scheme="https://codexin.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
</feed>
